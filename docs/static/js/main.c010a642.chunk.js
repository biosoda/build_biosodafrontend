(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{111:function(e,t,n){e.exports=n(275)},26:function(e){e.exports={prefixes_all:"PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX orth: <http://purl.org/net/orth#>\nPREFIX dbpedia2: <http://dbpedia.org/property/>\nPREFIX dbpedia: <http://dbpedia.org/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>",prefixes:"",possibleServices:[{name:"ENPKG",moreinfo:"https://enpkg.commons-lab.org/graphdb/",urlquery:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?format=json&query=ASK+%7B%3Fa+a+%3Fb%7D",expected:"true",CRONfail:"false"},{name:"UniProt",moreinfo:"https://www.uniprot.org/",urlquery:"https://sparql.uniprot.org/sparql/?format=json&query=ASK+%7B%3Fa+a+%3Fb%7D",expected:"true",CRONfail:"false"},{name:"Wikidata",moreinfo:"https://query.wikidata.org/",urlquery:"https://query.wikidata.org/sparql?format=json&query=ASK+%7B%3Fa+a+%3Fb%7D",expected:"true",CRONfail:"false"}],structure:[{id:"preambel",parentId:null,title:"Contact form"},{id:"ENPKG",parentId:null,title:"Sample ENPKG Queries"},{id:"DBGI",parentId:null,title:"Sample DBGI Queries"},{id:"Wikidata",parentId:null,title:"Sample Wikidata Queries"}],questions:[{id:"googleform",parentIds:["preambel"],fullHTML:!0,question:"<iframe src='https://docs.google.com/forms/d/e/1FAIpQLSc8-nNtwzR4KzEJNJcRPnOaGwm5wJ8kjIcNwi5WEkIc4WnGPA/viewform?embedded=true' width='640' height='250' frameborder='0' marginheight='0' marginwidth='0'>form is being loaded ...</iframe>"},{id:"Qd0",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd0",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Count all triples in the current ENPKG graph",estimatedseconds:"3",vars:[],SPARQL:"SELECT (COUNT(*) as ?count) WHERE { ?s ?p ?o }",fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd1",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd1",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q1) How many features (PI and NI modes) have the same SIRIUS/CSI:FingerID and ISDB annotation?",estimatedseconds:"3",vars:[],SPARQL:'# Count the number of features with the same ISDB\n# and SIRIUS annotations\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT (COUNT(?feature) AS ?count) \nWHERE\n    {\n        ?lcms enpkg:has_massive_doi ?massive_doi .\n        # FILTER(regex(str(?massive_doi), "MSV000087728")) # MassIVE id filter, MSV000087728 is pf1600, MSV000093464 is 337 Korean medicinal plants, if you want to query both you can pipe "MSV000087728|MSV000093464". You can apply or not these filters by ucommenting/commenting this line.\n        ?lcms enpkg:has_lcms_feature_list ?feature_list .\n        ?feature_list enpkg:has_lcms_feature ?feature .\n        ?feature enpkg:has_sirius_annotation ?sirius_annotation .\n            ?sirius_annotation rdf:type enpkg:SiriusStructureAnnotation .\n            ?sirius_annotation enpkg:has_InChIkey2D ?sirius_ik2d .\n        ?feature enpkg:has_isdb_annotation ?isdb_annotation .\n            ?isdb_annotation rdf:type enpkg:IsdbAnnotation .\n            ?isdb_annotation enpkg:has_InChIkey2D ?isdb_ik2d .\n    FILTER(?isdb_ik2d = ?sirius_ik2d) .\n    }\n',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd2",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd2",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q2) Which samples have features (PI mode) annotated as $$template_np_class$$ alkaloids by CANOPUS with a probability score above 0.5, ordered by the decreasing count of features?",estimatedseconds:"3",vars:[{name:"template_np_class",default:"Aspidosperma_type",type:"list",datasource:"example_annot",flavour:"autocomplete"}],SPARQL:'# Count the number of features annotated as aspidosperma type alkaloids \n# by CANOPUS (p>0.5) in the different samples\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX enpkgmodule: <https://enpkg.commons-lab.org/module/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\n\nSELECT ?extract ?organe ?species_name ?genus_name ?family_name ?count_of_selected_class\nWHERE\n    {  \n    ?material enpkg:has_lab_process ?extract .\n        ?material enpkgmodule:has_organe ?organe .\n        ?material enpkg:has_wd_id ?wd_sp .\n        OPTIONAL\n        {\n            SERVICE <https://query.wikidata.org/sparql> {\n            ?wd_sp wdt:P225 ?species_name .\n            ?family wdt:P31 wd:Q16521 ;\n                wdt:P105 wd:Q35409 ;\n                wdt:P225 ?family_name ;\n                ^wdt:P171* ?wd_sp .\n            ?genus wdt:P31 wd:Q16521 ;\n                wdt:P105 wd:Q34740 ;\n                wdt:P225 ?genus_name ;\n                ^wdt:P171* ?wd_sp \n            }\n        }\n        {\n            SELECT ?extract (COUNT(DISTINCT ?feature) AS ?count_of_selected_class)\n            WHERE\n            {   \n                ?extract rdf:type enpkg:LabExtract .\n                    ?extract enpkg:has_LCMS ?lcms .\n                        ?lcms rdf:type enpkg:LCMSAnalysisPos .\n                        ?lcms enpkg:has_lcms_feature_list ?feature_list .\n                            ?feature_list enpkg:has_lcms_feature ?feature .\n                                ?feature enpkg:has_canopus_annotation ?canopus .\n                                    ?canopus enpkg:has_canopus_npc_class ?np_class .\n                                    ?canopus enpkg:has_canopus_npc_class_prob ?class_prob .\n                                    FILTER(regex(str(?np_class), "$$template_np_class$$")) .\n                                    FILTER((?class_prob > 0.5)) .\n            } GROUP BY ?extract ORDER BY DESC(?count_of_selected_class)\n        }\n    }\n',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd3",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd3",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q3) Among the structural annotations from Tabernaemontana coffeoides (Apocynaceae) seeds extract, which ones contain an aspidospermidine substructure?",estimatedseconds:"3",vars:[],SPARQL:'# Among the structural annotations in Tabernaemontana coffeoides seeds extract,\n# get the ones that contain an Aspidospermidine scaffold scaffold.\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX idsm: <https://idsm.elixir-czech.cz/sparql/endpoint/>\nPREFIX sachem: <http://bioinfo.uochb.cas.cz/rdf/v1.0/sachem#>\n\nSELECT DISTINCT ?ik2d ?smiles\nWHERE\n    { \n    ?extract rdf:type enpkg:LabExtract .\n    FILTER(regex(str(?extract), "VGF152_B02")) # Tabernaemontana coffeoides seeds extract\n        ?extract enpkg:has_LCMS ?lcms .\n            ?lcms enpkg:has_lcms_feature_list ?feature_list .\n            ?feature_list enpkg:has_lcms_feature ?feature .\n                ?feature enpkg:has_sirius_annotation|enpkg:has_isdb_annotation ?annotation . \n                ?annotation enpkg:has_InChIkey2D ?ik2d .\n                    ?ik2d enpkg:has_smiles ?smiles .\n                    ?ik2d enpkg:is_InChIkey2D_of ?ik .\n                        ?ik enpkg:has_wd_id ?wd_id .\n                        SERVICE idsm:wikidata {\n                            VALUES ?SUBSTRUCTURE {\n                            "CCC12CCCN3C1C4(CC3)C(CC2)NC5=CC=CC=C45" # Aspidospermidine scaffold\n                            }\n                            ?wd_id sachem:substructureSearch _:b16.\n                            _:b16 sachem:query ?SUBSTRUCTURE.\n                        }      \n    }',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd4",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd4",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q4) Among the SIRIUS structural annotations from Tabernaemontana coffeoides (Apocynaceae) seeds extract, which ones are reported in the Tabernaemontana genus in WD?",estimatedseconds:"3",vars:[],SPARQL:'# Select, among SIRIUS anotations of Tabernaemontana coffeoides seeds extract,\n# the ones that are reported in the Tabernaemontana genus.\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX enpkgmodule: <https://enpkg.commons-lab.org/module/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\nPREFIX prov: <http://www.w3.org/ns/prov#>\nPREFIX pr: <http://www.wikidata.org/prop/reference/>\n\nSELECT DISTINCT ?ik2d ?genus\nWHERE\n    {  \n    ?material enpkg:has_lab_process ?extract .\n    ?material enpkgmodule:has_organe ?organe ;\n            enpkg:has_wd_id ?wd_sp .\n    FILTER(regex(str(?extract), "VGF152_B02")) # Tabernaemontana coffeoides seeds extract\n    ?extract enpkg:has_LCMS ?lcms .\n        ?lcms rdf:type enpkg:LCMSAnalysisPos .\n        ?lcms enpkg:has_lcms_feature_list ?feature_list .\n            ?feature_list enpkg:has_lcms_feature ?feature .\n                ?feature enpkg:has_sirius_annotation ?annotation . \n                    ?annotation enpkg:has_InChIkey2D ?ik2d .\n                        ?ik2d enpkg:has_smiles ?smiles .\n                        ?ik2d enpkg:is_InChIkey2D_of ?ik .\n                            ?ik enpkg:has_wd_id ?wd_id .\n        {\n        SELECT DISTINCT ?wd_id ?genus WHERE {\n            ?material enpkg:has_lab_process ?extract ;\n                enpkg:has_wd_id ?wd_sp .\n                FILTER(regex(str(?extract), "VGF152_B02")) .\n                OPTIONAL{\n                    service <https://query.wikidata.org/sparql> {\n                        ?wd_sp wdt:P225 ?species_name .\n                        ?genus wdt:P31 wd:Q16521 ;\n                                wdt:P105 wd:Q34740 ;\n                                ^wdt:P171* ?wd_sp .\n                        ?childtaxa wdt:P171* ?genus .\n                        ?wd_id wdt:P703 ?childtaxa\n                    }\n                }\n            }\n        }\n    }',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd5",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd5",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q5) Which compounds annotated in the active extract of Melochia umbellata have activity against T. cruzi reported (in ChEMBL), and in which taxon they are reported (in Wikidata)?",estimatedseconds:"3",vars:[],SPARQL:'# Among structural annotations in Melochia umbellata extract,\n# select the ones that have an activity reported against T. cruzi (ChEMBL)\n# with the taxon they are already reported in (Wikidata).\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX enpkgmodule: <https://enpkg.commons-lab.org/module/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX wd: <http://www.wikidata.org/entity/>\n\nSELECT DISTINCT ?ik ?chemblid ?name ?type ?value ?wd_id ?taxon ?taxon_name\nWHERE\n    {\n    service <https://query.wikidata.org/sparql> {\n        ?wd_id wdt:P31 wd:Q113145171 .\n            ?wd_id wdt:P703 ?taxon .\n            ?taxon wdt:P225 ?taxon_name .\n        }   \n        { SELECT DISTINCT ?ik ?chemblid ?name ?type ?value ?wd_id\n            WHERE\n            { \n                ?sample rdf:type enpkg:LabExtract\n                FILTER(regex(str(?sample), "VGF156_A06")) # Melochia umbellata extract \n                ?sample enpkg:has_LCMS ?lcms .\n                    ?lcms rdf:type enpkg:LCMSAnalysisPos .\n                    ?lcms enpkg:has_lcms_feature_list ?feature_list .\n                        ?feature_list enpkg:has_lcms_feature ?feature .\n                            {?feature enpkg:has_sirius_annotation ?annotation .\n                                ?annotation enpkg:has_InChIkey2D ?ik2d .\n                                ?annotation enpkg:has_cosmic_score ?cosmic .\n                                ?annotation enpkg:has_zodiac_score ?zodiac .\n                                FILTER((?cosmic > 0.5) && (?zodiac > 0.8))}\n                            UNION\n                            {?feature enpkg:has_isdb_annotation ?annotation .\n                                ?annotation enpkg:has_taxo_score ?taxo .\n                                FILTER(?taxo >= 6)}\n\n                ?annotation enpkg:has_InChIkey2D ?ik2d .\n                    ?ik2d enpkg:has_smiles ?smiles .\n                    ?ik2d enpkg:is_InChIkey2D_of ?ik .\n                        ?ik enpkgmodule:has_chembl_id ?chemblid .\n                        ?ik enpkg:has_wd_id ?wd_id .\n                            ?chemblid enpkgmodule:has_chembl_activity ?chembl_activity .\n                            ?chembl_activity enpkgmodule:target_name ?name .\n                            FILTER(regex(str(?name), "Trypanosoma cruzi")) \n                            ?chembl_activity enpkgmodule:activity_type ?type .\n                            ?chembl_activity enpkgmodule:activity_value ?value .\n            }\n        }      \n    }',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd6",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd6",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q6) Which features have the most fragments and neutral losses in common with feature #1 from Waltheria indica aerial part in PI mode (the [M+H]+ ion of waltherione G in this extract)?",estimatedseconds:"3",vars:[],SPARQL:'# Count for a given LCMS feature of the dataset the number of peak/loss\n# in common with a given feature\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX enpkgmodule: <https://enpkg.commons-lab.org/module/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n            \nSELECT ?feature (SAMPLE(?rt) AS ?rt) (SAMPLE(?parent_mass) AS ?parent_mass) (COUNT(?peakloss) AS ?count)\nWHERE\n    { \n        ?lcms enpkg:has_massive_doi ?massive_doi .\n        FILTER(regex(str(?massive_doi), "MSV000087728")) # MassIVE id filter\n        ?lcms rdf:type enpkg:LCMSAnalysisPos .\n        ?lcms enpkg:has_lcms_feature_list ?feature_list .\n        ?feature_list enpkg:has_lcms_feature ?feature .\n        ?feature rdf:type enpkg:LCMSFeature .\n        ?feature enpkg:has_spec2vec_doc ?doc .\n        ?feature enpkg:has_parent_mass ?parent_mass .\n        ?feature enpkg:has_retention_time ?rt .\n            ?doc enpkg:has_spec2vec_loss|enpkg:has_spec2vec_peak ?peakloss .\n\n        {SELECT ?peakloss WHERE {\n            ?feature rdf:type enpkg:LCMSFeature\n            FILTER(regex(str(?feature), "SC_AP_Wi_DCM_features_ms2_pos.mgf:scan:1$")) # [M+H]+ of waltherione G\n            ?feature enpkg:has_spec2vec_doc ?doc .\n                ?doc enpkg:has_spec2vec_loss|enpkg:has_spec2vec_peak ?peakloss .\n            }\n        }\n    }\n    GROUP BY ?feature ORDER BY DESC(?count)\n',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd7",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd7",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q7) Filter the PI mode features of Melochia umbellate annotated as [M+H]+ by SIRIUS to keep the ones for which a feature in NI mode is detected with the same retention time (\xb1 3 seconds) and a mass corresponding to the [M-H]- adduct (\xb1 5 ppm).",estimatedseconds:"3",vars:[],SPARQL:'# Among Melochia umbellata LCMS features in PI mode,\n# get the ones that are annoatted as [M+H]+ by SIRIUS and for which\n# a LCMS feature in NI mode with the corresponding [M-H]- m/z is found.\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX enpkgmodule: <https://enpkg.commons-lab.org/module/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\nPREFIX xsd: <http://www.w3.org/2001/XMLSchema#>\n\nSELECT DISTINCT ?feature ?rt ?pm ?feature_opp ?rt_opp ?pm_opp\nWHERE\n    { \n    VALUES ?ppm {\n        "5"^^xsd:decimal # m/z tolerance\n        }\n    VALUES ?rt_tol {\n        "0.05"^^xsd:decimal # RT tolerance (minute)\n        }\n\n    ?sample rdf:type enpkg:LabExtract\n    FILTER(regex(str(?sample), "VGF156_A06")) #Melochia umbellata\n    \n    ?sample enpkg:has_LCMS ?lcms .\n        ?lcms rdf:type enpkg:LCMSAnalysisPos .\n        ?lcms enpkg:has_lcms_feature_list ?feature_list .\n            ?feature_list enpkg:has_lcms_feature ?feature .                    \n                ?feature enpkg:has_parent_mass ?pm .\n                ?feature enpkg:has_retention_time ?rt .\n                ?feature enpkg:has_sirius_annotation ?sirius .\n                    ?sirius enpkg:has_sirius_adduct ?adduct .\n                    FILTER(regex(str(?adduct), "[M+H]+"))\n        \n    ?sample enpkg:has_LCMS ?lcms_opp .\n    ?lcms_opp rdf:type enpkg:LCMSAnalysisNeg .\n    ?lcms_opp enpkg:has_lcms_feature_list ?feature_list_opp .\n        ?feature_list_opp enpkg:has_lcms_feature ?feature_opp .\n        ?feature_opp enpkg:has_parent_mass ?pm_opp .\n        ?feature_opp enpkg:has_retention_time ?rt_opp .\n    FILTER(((?rt - ?rt_tol) < ?rt_opp) && ((?rt + ?rt_tol) > ?rt_opp))\n    FILTER((?pm_opp > ((?pm - 2.014) - ((?ppm * 0.000001) * (?pm - 2.014)))) && (?pm_opp < ((?pm - 2.014) + ((?ppm * 0.000001) * (?pm - 2.014)))))\n    }\n\n',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd8",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd8",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q8) For features from Melochia umbellata in PI mode with SIRIUS annotations, get the ones for which a feature in NI mode with the same retention time (\xb1 3 sec) has the same SIRIUS annotation (2D IK).",estimatedseconds:"3",vars:[],SPARQL:'# Get the PI mode LCMS features with SIRIUS annotation for which\n# a LCMS feature in NI mode of the same extract is annotated with\n# the same IK2D and has the same RT.\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX enpkgmodule: <https://enpkg.commons-lab.org/module/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>\n            \nSELECT DISTINCT ?feature ?feature_opp ?ik2d ?rt ?rt_opp\nWHERE\n    {\n    VALUES ?rt_tol {\n        "0.05"^^xsd:decimal # RT tolerance (minute)\n        }\n    ?sample rdf:type enpkg:LabExtract\n    FILTER(regex(str(?sample), "VGF156_A06"))\n\n    ?sample enpkg:has_LCMS ?lcms .\n        ?lcms rdf:type enpkg:LCMSAnalysisPos .\n        ?lcms enpkg:has_lcms_feature_list ?feature_list .\n            ?feature_list enpkg:has_lcms_feature ?feature .                    \n                ?feature enpkg:has_retention_time ?rt .\n                ?feature enpkg:has_sirius_annotation ?sirius .\n                    ?sirius enpkg:has_InChIkey2D ?ik2d .\n                    \n        \n    ?sample enpkg:has_LCMS ?lcms_opp .\n    ?lcms_opp rdf:type enpkg:LCMSAnalysisNeg .\n    ?lcms_opp enpkg:has_lcms_feature_list ?feature_list_opp .\n        ?feature_list_opp enpkg:has_lcms_feature ?feature_opp .\n            ?feature_opp enpkg:has_retention_time ?rt_opp .\n            ?feature_opp enpkg:has_sirius_annotation ?sirius_opp .\n                ?sirius_opp enpkg:has_InChIkey2D ?ik2d .\n\n    FILTER(((?rt - ?rt_tol) < ?rt_opp) && ((?rt + ?rt_tol) > ?rt_opp))\n    }\n\n',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qd9",runcheck:"2023-07-24, 2s, 1results",rqid:"Qd9",characteristics:"",numberresults:"",resultsexample:"",parentIds:["ENPKG"],question:"Q9) For features from Melochia umbellata in PI mode with SIRIUS annotations, get the ones for which a feature in NI mode with the same retention time (\xb1 3 sec) has  the same SIRIUS annotation (2D IK).",estimatedseconds:"3",vars:[],SPARQL:'# summary: Spectral search peak-loss\n# description: Search, through counts of common peaks and loss, spectrally related features within or across datasets. Return their species and upper taxonomy through a federated Wikidata search\n# endpoint: https://enpkg.commons-lab.org/graphdb/sparql\n# tags:\n#   - ENPKG\n#   - Natural products\n\nPREFIX enpkg: <https://enpkg.commons-lab.org/kg/>\nPREFIX enpkgmodule: <https://enpkg.commons-lab.org/module/>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX wdt: <http://www.wikidata.org/prop/direct/>        \nPREFIX wd: <http://www.wikidata.org/entity/>\n\nSELECT ?family_name ?genus_name ?species_name ?wd_sp ?feature ?sub_rt ?sub_parent_mass ?count\nWHERE {\n    # Subquery to get the top N hits with their Wikidata IDs\n    {\n        SELECT ?wd_sp ?feature (SAMPLE(?rt) AS ?sub_rt) (SAMPLE(?parent_mass) AS ?sub_parent_mass) (COUNT(?peakloss) AS ?count)\n        WHERE {\n            ?material enpkg:has_lab_process ?extract .\n            ?material enpkg:has_wd_id ?wd_sp .\n            ?material enpkg:submitted_taxon ?taxon .\n            ?extract rdf:type enpkg:LabExtract .\n            ?extract enpkg:has_LCMS ?lcms .\n            ?lcms enpkg:has_massive_doi ?massive_doi .\n            FILTER(regex(str(?massive_doi), "MSV000093464")) # MassIVE id filter, MSV000087728 is pf1600, MSV000093464 is 337 Korean medicinal plants, if you want to query both you can pipe "MSV000087728|MSV000093464". You can apply or not these filters by ucommenting/commenting this line.\n            ?lcms rdf:type enpkg:LCMSAnalysisPos .\n            ?lcms enpkg:has_lcms_feature_list ?feature_list .\n            ?feature_list enpkg:has_lcms_feature ?feature .\n            ?feature rdf:type enpkg:LCMSFeature .\n            ?feature enpkg:has_spec2vec_doc ?doc .\n            ?feature enpkg:has_parent_mass ?parent_mass .\n            ?feature enpkg:has_retention_time ?rt .\n            ?doc enpkg:has_spec2vec_loss|enpkg:has_spec2vec_peak ?peakloss .\n            \n            {\n                SELECT ?peakloss WHERE {\n                    ?feature rdf:type enpkg:LCMSFeature\n                    FILTER(regex(str(?feature), "mzspec:MSV000087728:VGF151_E05_features_ms2_pos.mgf:scan:4$")) # USI of the feature of interest \n                    ?feature enpkg:has_spec2vec_doc ?doc .\n                    ?doc enpkg:has_spec2vec_loss|enpkg:has_spec2vec_peak ?peakloss .\n                }\n            }\n        }\n        GROUP BY ?wd_sp ?feature\n        ORDER BY DESC(?count)\n        LIMIT 5\n    }\n\n    # Outer query to fetch species names from Wikidata\n    # Fetching taxonomic information from Wikidata\n    SERVICE <https://query.wikidata.org/sparql> {\n        ?wd_sp wdt:P225 ?species_name .\n        OPTIONAL {\n            ?family wdt:P31 wd:Q16521 ;\n                    wdt:P105 wd:Q35409 ;\n                    wdt:P225 ?family_name ;\n                    ^wdt:P171* ?wd_sp .\n        }\n        OPTIONAL {\n            ?genus wdt:P31 wd:Q16521 ;\n                    wdt:P105 wd:Q34740 ;\n                    wdt:P225 ?genus_name ;\n                    ^wdt:P171* ?wd_sp .\n        }\n    }\n}\nGROUP BY ?family_name ?genus_name ?species_name ?wd_sp ?feature ?sub_rt ?sub_parent_mass ?count\nORDER BY DESC(?count)\n',fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qe0",runcheck:"2020-03-06, 158s, 4415results",rqid:"Qe0",characteristics:"",numberresults:"",resultsexample:"",parentIds:["DBGI"],question:"Count all entries in the current DBGI graph",estimatedseconds:"50",vars:[],SPARQL:"SELECT (COUNT (*) as ?count) WHERE { ?s ?p ?o }",fetchUrl:"https://biosoda.unil.ch/graphdb/repositories/dbgi-enpkg?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://biosoda.unil.ch/sparql/graphdb/repositories/dbgi-enpkg",queryHeaders:{Accept:"application/sparql-results+json"}},{id:"Qw1",runcheck:"2023-07-24, 2s, 1results",rqid:"Q0",characteristics:"",numberresults:"",resultsexample:"",parentIds:["Wikidata"],question:"Count all triples in the current Wikidata graph",estimatedseconds:"3",vars:[],SPARQL:"SELECT (COUNT(*) as ?count) WHERE { ?s ?p ?o }",fetchUrl:"https://query.wikidata.org/sparql?query=$$query$$&format=JSON$$&limit=limit$$&offset=$$offset$$&inference=false",fetchUrlShort:"https://query.wikidata.org/",queryHeaders:{Accept:"application/sparql-results+json"}}],datasources:{example_annot:{fetchUrl:"https://enpkg.commons-lab.org/graphdb/repositories/ENPKG?query=$$query$$&format=JSON$$&offset=$$offset$$&inference=false",queryHeaders:{Accept:"application/sparql-results+json"},fetchQuery:'\n\n            SELECT distinct (strafter(str(?uri_class), "https://enpkg.commons-lab.org/kg/npc_") as ?value)\n            WHERE\n            {   \n                ?uri_class a <https://enpkg.commons-lab.org/kg/NPCClass>\t\n    }'}}}},260:function(e,t,n){},275:function(e,t,n){"use strict";n.r(t);var a=n(11),s=n(20),r=n(17),i=n(22),o=n(21),l=n(23),u=n(1),p=n.n(u),c=n(13),d=n(35),m=(n(251),n(50)),h=n(30),f=n.n(h),g=(n(260),n(26)),b=n(24),y=(n(261),n(262),function(e){function t(e,n){var a;return Object(s.a)(this,t),(a=Object(i.a)(this,Object(o.a)(t).call(this,e))).state={treedatafiltered:a.props.treedata},a}return Object(l.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){return p.a.createElement("div",{id:"searchTree"},p.a.createElement(_,{treedata:this.state.treedatafiltered,searchString:this.props.searchString,fullExpansion:this.props.fullExpansion,lastActiveId:this.props.lastActiveId,useInnerLimits:this.props.useInnerLimits}))}}]),t}(u.Component)),_=function(e){function t(e,n){return Object(s.a)(this,t),Object(i.a)(this,Object(o.a)(t).call(this,e))}return Object(l.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){var e=this,t=this.props.treedata.map(function(t){return p.a.createElement(k,{treedata:t,key:t.id,searchString:e.props.searchString,fullExpansion:e.props.fullExpansion,lastActiveId:e.props.lastActiveId,useInnerLimits:e.props.useInnerLimits})});return p.a.createElement("div",{id:"tree"},p.a.createElement("ul",{id:"whole",className:this.props.searchString.length?"searchmode":""},t))}}]),t}(u.Component),k=function(e){function t(e,n){var r;return Object(s.a)(this,t),(r=Object(i.a)(this,Object(o.a)(t).call(this,e))).renderChild=function(e){var n=JSON.stringify(e.title).toLowerCase().indexOf(r.props.searchString.toLowerCase()),a=JSON.stringify(e).toLowerCase().indexOf(r.props.searchString.toLowerCase()),s=[e.id,r.thisopen||r.props.fullExpansion||r.props.searchString.length?"open":"closed",r.props.searchString.length&&n>0?"searchstringfound":"",r.props.searchString.length&&a>0?"searchstringfoundlower":"",r.props.searchString.length&&n<0&&a<0?"searchstringnotfound":"",e.id===r.props.lastActiveId?"lastActive":""].join(" ");if("undefined"===typeof e.children){var i="";return i="undefined"!=typeof e.estimatedSeconds&&!0===r.props.useInnerLimits?p.a.createElement("button",{className:"btn btn-warning btn-sm",title:"estimated runtime of original query",style:{fontSize:"0.666em"},disabled:!0},(2*e.estimatedSeconds).toString().toHHMMSS()):"undefined"!=typeof e.estimatedSeconds?p.a.createElement("button",{className:"btn btn-secondary btn-sm",title:"estimated runtime of original query with limited results",style:{fontSize:"0.666em"},disabled:!0},(2*e.estimatedSeconds).toString().toHHMMSS()):"",p.a.createElement("li",{key:e.id,"data-haschild":"false",className:s},p.a.createElement("div",{className:"title"},e.title," ",i))}return p.a.createElement("li",{key:e.id,"data-haschild":"true",className:s},p.a.createElement("div",{className:"title",onClick:r.handleClick},p.a.createElement("div",{className:"plusminus"}),e.title),p.a.createElement("ul",{key:e.id},e.children.map(function(e){return p.a.createElement(t,{treedata:e,key:e.id,searchString:r.props.searchString,fullExpansion:r.props.fullExpansion,lastActiveId:r.props.lastActiveId,useInnerLimits:r.props.useInnerLimits})})))},r.handleClick=r.handleClick.bind(Object(a.a)(Object(a.a)(r))),r.thisopen=!1,r}return Object(l.a)(t,e),Object(r.a)(t,[{key:"handleClick",value:function(){this.thisopen=!this.thisopen,this.setState({})}},{key:"resetClick",value:function(){this.thisopen=!1}},{key:"render",value:function(){return[this.renderChild(this.props.treedata)]}}]),t}(u.Component),w=y;function E(e,t){var n="undefined"!==typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"===typeof e)return S(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return S(e,t)}(e))||t&&e&&"number"===typeof e.length){n&&(e=n);var a=0,s=function(){};return{s:s,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,i=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return i=e.done,e},e:function(e){o=!0,r=e},f:function(){try{i||null==n.return||n.return()}finally{if(o)throw r}}}}function S(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}var v=n(263);n(267);var I="$$",C=n(268),R=function(e){function t(){return Object(s.a)(this,t),Object(i.a)(this,Object(o.a)(t).apply(this,arguments))}return Object(l.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){var e="";return""!==this.props.superState.query&&(e=this.props.superState.query),p.a.createElement("div",null,p.a.createElement("h4",{style:{display:"inline-block",marginRight:"20px"}}," SPARQL Query Editor "),p.a.createElement("div",null,p.a.createElement(v,{ref:"cm",value:e,onChange:this.props.updateCode.bind(this),onKeyPress:this.props.updateCode.bind(this),options:{lineNumbers:!0,mode:"sparql",placeholder:"Enter SPARQL query here or select one of the templates on the left"},defaultValue:this.props.defaultValue})),p.a.createElement("button",{onClick:this.props.handleSubmit,className:"btn btn-success"}," > run this query "))}}]),t}(u.Component);String.prototype.toHHMMSS=function(){var e=parseInt(this,10),t=Math.floor(e/3600),n=Math.floor((e-3600*t)/60),a=e-3600*t-60*n;return t<10&&(t="0"+t),n<10&&(n="0"+n),a<10&&(a="0"+a),t+":"+n+":"+a};var q=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).isAvailable=function(e){var t=new Promise(function(e,t){setTimeout(t,1e3,"Request timed out")}),a=f()(e);return Promise.race([t,a]).then(function(e){n.result="server is online"}).catch(function(e){n.result="server is offline or slow"}),n.result},n.state={time:0},n.result=null,n}return Object(l.a)(t,e),Object(r.a)(t,[{key:"componentDidMount",value:function(){var e=this;this.interval=setInterval(function(){return e.setState({time:Date.now()})},6e4)}},{key:"componentWillUnmount",value:function(){clearInterval(this.interval)}},{key:"render",value:function(){var e="the query will be answered directly by the source db";"https://biosoda.expasy.org:4443/sparql"===this.props.superState.queryTargetShort&&(e="the query will be sent to the federation server to fullfill the federated service calls");var t=this.isAvailable(this.props.superState.queryTargetShort);return p.a.createElement("span",null," (",e,") - ",t," - last check: ",new Date(Date.now()).toLocaleString())}}]),t}(u.Component),P=function(e){function t(e){return Object(s.a)(this,t),Object(i.a)(this,Object(o.a)(t).call(this,e))}return Object(l.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){var e=this,t=g.possibleServices.map(function(t){return p.a.createElement(L,{key:t.name,name:t.name,moreinfo:t.moreinfo,popup:t.popup,urlquery:t.urlquery,lastUpdate:e.props.lastUpdate})});return p.a.createElement(p.a.Fragment,null,p.a.createElement("div",{dangerouslySetInnerHTML:{__html:"Status of the queried service points: "}}),t)}}]),t}(u.Component),L=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).state={isLoading:!0,status:[],error:null},n}return Object(l.a)(t,e),Object(r.a)(t,[{key:"componentDidMount",value:function(){this.fetchStatus()}},{key:"componentDidUpdate",value:function(e,t){e.lastUpdate!==this.props.lastUpdate&&this.fetchStatus()}},{key:"fetchStatus",value:function(){var e=this;f()(this.props.urlquery,{method:"GET",headers:{Accept:"application/sparql-results+json, */*;q=0.5"}}).then(function(e){return e.json()}).then(function(t){console.log(t),e.setState({status:t,isLoading:!1,error:null})}).catch(function(t){console.log(t),e.setState({error:t,isLoading:!1})})}},{key:"render",value:function(){var e=this.state,t=e.isLoading,n=(e.status,e.error),a="danger";return a=t||null!==n?"warning":"success",p.a.createElement(p.a.Fragment,null,p.a.createElement("a",{href:this.props.moreinfo,target:"_blank",rel:"noopener noreferrer",key:"service_"+this.props.name,className:"btn btnmenu btn-"+a,title:this.props.popup}," "+this.props.name))}}]),t}(u.Component),$=function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(i.a)(this,Object(o.a)(t).call(this,e))).state={prog:0,estimate:n.props.estimatedRuntime,startSeconds:Date.now()},n}return Object(l.a)(t,e),Object(r.a)(t,[{key:"componentDidMount",value:function(){this.timerID=setInterval(this.randomWidth.bind(this),100)}},{key:"componentWillUnmount",value:function(){clearInterval(this.timerID)}},{key:"randomWidth",value:function(){var e=Date.now()-this.state.startSeconds,t=100*(1-Math.exp(-1.5*e/this.state.estimate/1e3));this.setState({prog:t})}},{key:"render",value:function(){return p.a.createElement("div",{className:"progress-bar progress-bar-striped progress-bar-animated",role:"progressbar",style:{width:this.state.prog+"%"},"aria-valuemin":"0","aria-valuemax":"100"})}}]),t}(u.Component),x=function(e){function t(e){var n;return Object(s.a)(this,t),n=Object(i.a)(this,Object(o.a)(t).call(this,e)),document.title="dbgi web frontend",n.handleSubmit=n.handleSubmit.bind(Object(a.a)(Object(a.a)(n))),n._handleKeyPress=n._handleKeyPress.bind(Object(a.a)(Object(a.a)(n))),n.updateCode=n.updateCode.bind(Object(a.a)(Object(a.a)(n))),n.handleShow=n.handleShow.bind(Object(a.a)(Object(a.a)(n))),n.handleRun=n.handleRun.bind(Object(a.a)(Object(a.a)(n))),n.expandAll=n.expandAll.bind(Object(a.a)(Object(a.a)(n))),n.collapseAll=n.collapseAll.bind(Object(a.a)(Object(a.a)(n))),n.displayResults=n.displayResults.bind(Object(a.a)(Object(a.a)(n))),n.state={searchString:"",showSparql:!1,showSpinner:!1,sparqlEndpointURL:"",hasResults:!1,servicepointsUpdated:Date.now(),value:"",dynamicvals:[],treeData:[],resultOffset:0,resultLimit:10,lookupLimit:100,useInnerLimits:!0,lookupOffset:0,query:"",queryHuman:"none of our prepared queries",estimatedRuntime:"unknown",queryTarget:"http://dbgi.vital-it.ch:7200/repositories/dbgi-enpkg?query=$$query$$&format=JSON&limit=$$limit$$&offset=$$offset$$&inference=false",queryTargetShort:"http://dbgi.vital-it.ch:7200/repositories/dbgi-enpkg",queryHeaders:{},asyncWaiter:"",expanded:!1},n.renderedTableFromJSON=function(e){var t,n=document.createElement("table"),a=e.results.bindings,s=e.head.vars,r=document.createElement("thead"),i=E(s);try{for(i.s();!(t=i.n()).done;){var o=t.value;if(o.endsWith("_noshow"))break;var l=document.createElement("th");l.appendChild(document.createTextNode(o)),r.appendChild(l)}}catch(_){i.e(_)}finally{i.f()}n.appendChild(r);var u,p=E(a);try{for(p.s();!(u=p.n()).done;){var c,d=u.value,m=document.createElement("tr"),h=E(s);try{for(h.s();!(c=h.n()).done;){var f=c.value;if(!f.endsWith("_noshow")){var g=document.createElement("td");if("undefined"!==typeof d[f]&&"uri"===d[f].type){var b=document.createElement("a"),y=document.createTextNode(d[f].value);b.appendChild(y),b.title="linked resource",b.href=d[f].value,b.target="_blank",g.appendChild(b)}else"undefined"!==typeof d[f]&&g.appendChild(document.createTextNode(d[f].value));m.appendChild(g)}}}catch(_){h.e(_)}finally{h.f()}n.append(m)}}catch(_){p.e(_)}finally{p.f()}return n},g.structure.forEach(function(e){var t={id:e.id,title:e.title},n=Object(d.a)({treeData:this.state.treeData,newNode:t,expandParent:!0,parentKey:e.parentId,getNodeKey:function(e){return e.node.id}});this.state.treeData=n.treeData},Object(a.a)(Object(a.a)(n))),g.questions.forEach(function(e){e.parentIds.forEach(function(t){var n=this,a=[];if(a.push(e.question),this["updateQuery_"+e.id]=function(t){var a=e.SPARQL,s=e.question,r=2*e.estimatedseconds,i=r.toString();if(i="undefined"==typeof i?"unknown":i.toHHMMSS(),"undefined"!==typeof e.vars){var o,l=E(e.vars);try{for(l.s();!(o=l.n()).done;){var u=o.value,p=u.type;if("string"===p||"list"===p||"simplelist"===p){var c,d,m=I+u.name+I;"undefined"===typeof n.state.dynamicvals[e.id]||"undefined"===typeof n.state.dynamicvals[e.id][u.name]||"undefined"===typeof n.state.dynamicvals[e.id][u.name].label?("undefined"===typeof u.defaultvalue&&(u.defaultvalue=u.default),c=u.defaultvalue,d=u.default):(c=n.state.dynamicvals[e.id][u.name].value,d="undefined"!==typeof n.state.dynamicvals[e.id][u.name].label?n.state.dynamicvals[e.id][u.name].label:n.state.dynamicvals[e.id][u.name].value),a=a.split(m).join(c.split("'").join("\\'")),s=s.split(m).join(d)}}}catch(h){l.e(h)}finally{l.f()}}return a=!0===n.state.useInnerLimits?(a=a.split(I+"innerlimit"+I).join("LIMIT "+n.state.resultLimit)).split(I+"innerlimit10"+I).join("LIMIT "+10*n.state.resultLimit):a.split(I+"innerlimit"+I).join(""),n.setState({query:a,queryTarget:e.fetchUrl,queryTargetShort:e.fetchUrlShort,queryHeaders:e.queryHeaders,queryHuman:s,estimatedRuntime:i,estimatedRuntimeSeconds:r}),"undefined"!==typeof n.refs.sparqy&&n.refs.sparqy.refs.cm.getCodeMirror().doc.setValue(a),!0},"undefined"!==typeof e.vars){var s,r=E(e.vars);try{var i=function(){var t=s.value;"string"===t.type&&(a=C(a,I+t.name+I,function(a,s){return p.a.createElement("input",{key:t.name,name:t.name,id:e.id+"_"+t.name,defaultValue:t.default,onChange:function(a){return n.handleChange(a.value,e.id,t.name,a)}})})),"simplelist"===t.type&&(o=t.listvalues,a=C(a,I+t.name+I,function(a,s){return p.a.createElement(m.b,{key:t.name,name:t.name,id:e.id+"_"+t.name,defaultValue:{value:t.defaultvalue,label:t.default},classNamePrefix:"my-select",options:o,className:"reactSelect",onChange:function(a){return n.handleChangeSelect(e.id,t.name,a)}})})),"list"===t.type&&"autocomplete"===t.flavour&&(n["fetchAutocomplete_"+t.name]=function(n){var a=[];return"undefined"!==typeof t.fullList&&!0===t.fullList&&(n=""),"undefined"!==typeof t.extrafilter&&(a=t.extrafilter),this.fetchAutocompleteBiosoda(t.datasource,n,e.id,t.name,a)},a=C(a,I+t.name+I,function(a,s){return p.a.createElement(m.a,{key:t.name,name:t.name,id:e.id+"_"+t.name,classNamePrefix:"my-select",className:"autocomplete",dataExtrafilter:t.extrafilter,defaultValue:{label:t.default},noOptionsMessage:function(e){return!e.inputValue&&"Type keyword above to perform search. Found options will be listed here ..."},onChange:function(a){return n.handleChange(a.value,e.id,t.name,a)},cacheOptions:!0,loadOptions:n["fetchAutocomplete_"+t.name].bind(n)})}))};for(r.s();!(s=r.n()).done;){var o;i()}}catch(c){r.e(c)}finally{r.f()}}a.push(p.a.createElement("button",{key:"showSPARQL_"+e.id,className:"btn btn-primary buttonInfo",title:"show query in SPARQL query editor",onClick:function(){return n.handleShow(e.id)}},"i")),a.push(p.a.createElement("button",{key:"submitquery_"+e.id,className:"btn btn-success buttonSubmit",title:"directly run this query",onClick:function(){return n.handleRun(e.id)}},">")),"undefined"!==typeof e.fullHTML&&(a=[]).push(p.a.createElement("div",{key:e.id,dangerouslySetInnerHTML:{__html:e.question},code:e.question}));var l={id:e.id,title:a,estimatedSeconds:e.estimatedseconds},u=Object(d.a)({treeData:this.state.treeData,newNode:l,expandParent:!0,parentKey:t,getNodeKey:function(e){return e.node.id}});this.state.treeData=u.treeData},this)},Object(a.a)(Object(a.a)(n))),n}return Object(l.a)(t,e),Object(r.a)(t,[{key:"_handleKeyPress",value:function(e){"Enter"===e.key&&this.handleSubmit()}},{key:"node_logger",value:function(e,t,n,a){return!1}},{key:"updateCode",value:function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0];var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if("undefined"!==typeof this.refs.sparqy){var t=this.refs.sparqy.refs.cm.getCodeMirror().doc.getValue();this.setState({query:t,mode:"sparql"}),"object"==typeof e&&this.setState({queryHuman:"manually altered SPARQL query",estimatedRuntime:'not known - <a href="https://www.forbes.com/sites/gilpress/2015/07/29/turing-award-winner-stonebraker-on-the-future-of-taming-big-data/#54c0a84134e5" target="_blank">not calculateable</a> - hold on'})}return!0}},{key:"handleShow",value:function(e){this.setState({showSparql:!0,lastActiveId:e}),this["updateQuery_"+e]()}},{key:"handleRun",value:function(e){var t=this;this.setState({lastActiveId:e}),this["updateQuery_"+e]()&&this.updateCode()&&this.setState({asyncWaiter:1},function(){t.handleSubmit()})}},{key:"handleSubmit",value:function(){var e=this,t=this.state.query,n=this.state.queryTarget.replace(I+"query"+I,encodeURIComponent(t)).replace(I+"offset"+I,this.state.lookupOffset).split(" ").join("+");n=!0===this.state.useInnerLimits?n.replace(I+"&limit=limit"+I,"&limit="+this.state.lookupLimit):n.replace(I+"&limit=limit"+I,"");var a=this.state.queryHeaders;this.displayResults(""),this.state.servicepointsUpdated=Date.now();var s=Date.now();return f()(n,{headers:a}).then(function(e){return e.json()}).then(function(t){var n=Date.now()-s;e.displayResults(t,n)},function(t){e.setState({hasResults:!1,showSpinner:!1}),alert("Error! "+t)})}},{key:"expand",value:function(e){var t=Object(d.b)({treeData:this.state.treeData,expanded:e});this.setState({treeData:t})}},{key:"collapseAll",value:function(){this.setState({expanded:!1}),this.expand(!1)}},{key:"expandAll",value:function(){this.setState({expanded:!0}),this.expand(!0)}}]),Object(r.a)(t,[{key:"fetchAutocompleteBiosoda",value:function(e,t,n,a,s){var r,i=this,o=g.datasources[e].fetchQuery.split(I+"searchString"+I).join(t.toLowerCase()),l=0,u=E(s);try{for(u.s();!(r=u.n()).done;){var p=r.value;console.log(l),o=o.split(I+"extra_"+l+I).join("fruit fly"),console.log("replace species @585"),console.log(p),l++}}catch(m){u.e(m)}finally{u.f()}var c=g.datasources[e].fetchUrl.replace(I+"query"+I,encodeURIComponent(o)).replace(I+"&limit=limit"+I,"&limit="+this.state.lookupLimit).replace(I+"offset"+I,this.state.lookupOffset).replace(" ","+"),d=g.datasources[e].queryHeaders;return f()(c,{headers:d}).then(function(e){return e.json()}).then(function(e){e.results.bindings.sort(function(e,n){if(e.value.value===n.value.value)return 0;if(e.value.value.toLowerCase().substring(e.length-t.length)===t.toLowerCase()&&n.value.value.toLowerCase().substring(n.length-t.length)===t.toLowerCase()||e.value.value.toLowerCase().substring(0,t.length)===t.toLowerCase()&&n.value.value.toLowerCase().substring(0,t.length)===t.toLowerCase()){if(e.value.value.toLowerCase()>n.value.value.toLowerCase())return 1;if(e.value.value.toLowerCase()<n.value.value.toLowerCase())return-1}return e.value.value.toLowerCase()===t.toLowerCase()?-1:n.value.value.toLowerCase()===t.toLowerCase()?1:e.value.value.toLowerCase().substring(0,t.length)===t.toLowerCase()?-1:n.value.value.toLowerCase().substring(0,t.length)===t.toLowerCase()?1:e.value.value.toLowerCase().substring(e.length-t.length)===t.toLowerCase()?-1:n.value.value.toLowerCase().substring(n.length-t.length)===t.toLowerCase()?1:0});var n=e.results.bindings.map(function(e){return"undefined"===typeof e.name&&(e.name=e.value),Object.assign({},{value:e.value.value,label:e.name.value})});return i.setState({options:n}),n}).catch(function(e){console.error(e)})}},{key:"handleChange",value:function(e,t,n,a){"undefined"!==typeof a.target&&(e=a.target.value);var s=this.state.dynamicvals;"undefined"==typeof s[t]&&(s[t]=[]),"undefined"==typeof s[t][n]&&(s[t][n]=[]),s[t][n].value=e,"undefined"!==typeof a.label?s[t][n].label=a.label:s[t][n].label=e,this.setState({dynamicvals:s}),this["updateQuery_"+t]()}},{key:"handleChangeSelect",value:function(e,t,n){var a=this.state.dynamicvals;"undefined"==typeof a[e]&&(a[e]=[]),"undefined"==typeof a[e][t]&&(a[e][t]=[]),a[e][t].value=n.value,a[e][t].label=n.label,this.setState({dynamicvals:a}),this["updateQuery_"+e]()}},{key:"displayResults",value:function(e,t){""!==e?(this.setState({hasResults:!0,showSpinner:!1}),document.getElementById("results").appendChild(document.createTextNode("Time taken: "+t/1e3+" s, result count: "+e.results.bindings.length)),e.results.bindings.length>0&&document.getElementById("results").appendChild(this.renderedTableFromJSON(e))):(document.getElementById("results").innerHTML="",this.setState({showSpinner:!0}))}},{key:"render",value:function(){var e=this,t=this.state.searchString;return p.a.createElement("div",{style:{height:700}},p.a.createElement(b.b,null,p.a.createElement(b.a,{lg:6,md:12},p.a.createElement("h3",{style:{backgroundColor:"white"}},p.a.createElement("strong",null,"Bio"),"-Query",p.a.createElement("span",{style:{fontSize:"0.6em",position:"relative",bottom:"0.6em",color:"red",fontFamily:"monospace"},title:"BETA-Version - Working prototype with limited functionality"},"\u03b2"),": Federated template ",p.a.createElement("strong",null,"s"),"earch ",p.a.createElement("strong",null,"o"),"ver biological ",p.a.createElement("strong",null,"da"),"tabases (",p.a.createElement("u",null,p.a.createElement("strong",null,"DBGI"))," Edition)")),p.a.createElement(b.a,{lg:6,md:12,id:"services",style:{textAlign:"right",backgroundColor:"rgba(222,222,222,0.222)",padding:"0.222em",margin:"0.222em auto"}},p.a.createElement(P,{ref:"servicepoints",lastUpdate:this.state.servicepointsUpdated}))),p.a.createElement(b.b,{style:{clear:"both"}},p.a.createElement(b.a,{sm:this.state.showSparql?"7":"12"},p.a.createElement("form",{style:{display:"inline-block",backgroundColor:"white"},onSubmit:function(e){e.preventDefault()}},p.a.createElement("input",{id:"find-box",type:"text",placeholder:"Search our queries...",value:t,onChange:function(t){e.setState({searchString:t.target.value})}}),this.state.expanded?p.a.createElement("button",{className:"btn btn-warning btnmenu",onClick:this.collapseAll},"Collapse All"):p.a.createElement("button",{className:"btn btn-primary btnmenu",onClick:this.expandAll},"Expand All"),this.state.showSparql?p.a.createElement("button",{className:"btn btnmenu",style:{backgroundColor:"#00FFFF"},onClick:function(){return e.setState({showSparql:!1})}},"Hide SPARQL Query Editor"):p.a.createElement("button",{className:"btn btnmenu",style:{backgroundColor:"#00FFFF"},onClick:function(){return e.setState({showSparql:!0})}},"Show SPARQL Query Editor"),this.state.useInnerLimits?p.a.createElement("button",{className:"btn btnmenu",style:{backgroundColor:"#00FFFF"},onClick:function(){e.setState({useInnerLimits:!1}),"undefined"!==typeof e.refs.sparqy&&e.refs.sparqy.refs.cm.getCodeMirror().doc.setValue("")},title:"if you use inner limits, you can reduce the time to load the results. you probably won't get all of the rows but you can see if your query works as expected"},"Limited results are on"):p.a.createElement("button",{className:"btn btnmenu",style:{backgroundColor:"#00FFFF"},onClick:function(){e.setState({useInnerLimits:!0}),"undefined"!==typeof e.refs.sparqy&&e.refs.sparqy.refs.cm.getCodeMirror().doc.setValue("")},title:"if you don't use inner limits, you can run into a timeout if your query asks for too much data"},"Limited results are off"),p.a.createElement("button",{className:"btn btn-success btnmenu",onClick:function(){return window.location.reload()},rel:"noopener noreferrer"},"Reset / Reload"),p.a.createElement("a",{className:"btn btn-light btnmenu",href:"https://github.com/biosoda/bioquery",target:"_blank",rel:"noopener noreferrer"},"About")),p.a.createElement("div",{style:{height:"700px",overflow:"hidden",padding:"1em",overflowY:"auto"}},p.a.createElement(w,{treedata:this.state.treeData,searchString:this.state.searchString,fullExpansion:this.state.expanded,lastActiveId:this.state.lastActiveId,useInnerLimits:this.state.useInnerLimits}))),this.state.showSparql?p.a.createElement(b.a,{sm:"5"},p.a.createElement(R,{ref:"sparqy",displayResults:this.displayResults,handleSubmit:this.handleSubmit,superState:this.state,updateCode:this.updateCode.bind(this),defaultValue:""})):null),this.state.showSpinner?p.a.createElement(b.b,{id:"spinnerwheel"},p.a.createElement(b.a,null,p.a.createElement("div",{className:"progress"},p.a.createElement($,{estimatedRuntime:this.state.estimatedRuntimeSeconds})))):null,p.a.createElement(b.b,{id:"resultscol"},p.a.createElement(b.a,null,p.a.createElement("div",{id:"technical",style:{display:"none"}},p.a.createElement("div",null,"Number of results (LIMIT): ",p.a.createElement("span",{className:"badge btn-primary"},"1")," ",p.a.createElement("span",{className:"badge btn-primary"},"10")," ",p.a.createElement("span",{className:"badge btn-primary"},"25")),p.a.createElement("div",null,"Next page (OFFSET - if available): ",p.a.createElement("span",{className:"badge btn-primary"},"PREV")," ",p.a.createElement("span",{className:"badge btn-primary"},"NEXT"))),p.a.createElement("div",{id:"askedQuery",style:{padding:"1em"}},p.a.createElement("span",null,"Your Question: "),p.a.createElement("span",{id:"question"},this.state.queryHuman)),p.a.createElement("div",{id:"fetchTargetDiv",style:{padding:"1em"}},p.a.createElement("span",null,"Query will be sent to: "),p.a.createElement("span",{id:"fetchTarget"},p.a.createElement("a",{href:this.state.queryTargetShort,target:"_blank",rel:"noopener noreferrer"},this.state.queryTargetShort),p.a.createElement(q,{superState:this.state}))),p.a.createElement("div",{id:"estimatedRuntime",style:{padding:"1em"}},p.a.createElement("span",null,"Estimated Runtime: "),p.a.createElement("span",{id:"estimatedRuntime",dangerouslySetInnerHTML:{__html:this.state.estimatedRuntime}})),p.a.createElement("div",{id:"results",ref:"results"}))))}}]),t}(u.Component);Object(c.render)(p.a.createElement(x,{developersdata:g}),document.getElementById("root"))}},[[111,1,2]]]);
//# sourceMappingURL=main.c010a642.chunk.js.map