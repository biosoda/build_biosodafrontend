{"version":3,"sources":["treeSearchReact.js","index.js"],"names":["TreeSearch","_Component","props","context","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","treedatafiltered","treedata","_inherits","_createClass","key","value","React","createElement","id","NestedTree","searchString","fullExpansion","lastActiveId","useInnerLimits","Component","_Component2","_this2","wholetree","map","onelement","NestedNodes","className","length","_Component3","_this3","renderChild","child","tmpfoundhere","JSON","stringify","title","toLowerCase","indexOf","tmpfoundlower","actualclassnames","thisopen","join","children","btnestsec","estimatedSeconds","style","fontSize","disabled","toString","toHHMMSS","data-haschild","onClick","handleClick","bind","_assertThisInitialized","setState","Codemirror","require","varmasker","reactStringReplace","SparqlInputField","apply","arguments","currentSPARQLmessage","superState","query","display","marginRight","ref","onChange","updateCode","onKeyPress","options","lineNumbers","mode","placeholder","defaultValue","handleSubmit","String","prototype","sec_num","parseInt","hours","Math","floor","minutes","seconds","ExtraTarget","isAvailable","targetURL","timeout","Promise","resolve","reject","setTimeout","request","fetch","race","then","response","result","catch","error","time","interval","setInterval","Date","now","clearInterval","targetExplanation","queryTargetShort","isAvNow","toLocaleString","ServicePoints","allpoints","dbgidata","possibleServices","onepoint","ServicePoint","name","moreinfo","popup","urlquery","lastUpdate","Fragment","dangerouslySetInnerHTML","__html","_Component4","_this4","isLoading","status","fetchStatus","prevProps","prevStatus","_this5","method","headers","Accept","json","data","console","log","_this$state","tmpclass","href","target","rel","Progressbar","_Component5","_this6","prog","estimate","estimatedRuntime","startSeconds","timerID","randomWidth","totalRun","newProgress","exp","role","width","aria-valuemin","aria-valuemax","App","_Component6","_this7","document","_handleKeyPress","handleShow","handleRun","expandAll","collapseAll","displayResults","showSparql","showSpinner","sparqlEndpointURL","hasResults","servicepointsUpdated","dynamicvals","treeData","resultOffset","resultLimit","lookupLimit","lookupOffset","queryHuman","queryTarget","queryHeaders","asyncWaiter","expanded","_step","eltable","_results","results","bindings","_variables","head","vars","elthead","_iterator","_createForOfIteratorHelper","s","n","done","onevar","endsWith","elth","appendChild","createTextNode","err","e","f","_step2","_iterator2","_step3","row","elrow","_iterator3","eltd","type","link","text","append","structure","forEach","element","NEW_NODE","newTree","addNodeUnderParent","newNode","expandParent","parentKey","parentId","getNodeKey","_ref","node","questions","el","parentIds","_this10","functionalQuestion","push","question","event","newsparql","SPARQL","humanReadable","newEstimatedRuntimeSeconds","estimatedseconds","_step4","_iterator4","tmptype","replaceval","replacevalhuman","originalval","defaultvalue","default","split","fetchUrl","fetchUrlShort","estimatedRuntimeSeconds","refs","sparqy","cm","getCodeMirror","doc","setValue","_step5","_iterator5","_loop","match","i","evt","handleChange","tmpoptions","listvalues","Select","label","classNamePrefix","handleChangeSelect","flavour","searchKey","searchFilter","fullList","extrafilter","fetchAutocompleteBiosoda","datasource","Async","dataExtrafilter","noOptionsMessage","_ref2","inputValue","cacheOptions","loadOptions","fullHTML","code","_ref3","goal","timetaken","undefined","triggerFrom","newCode","getValue","nodeid","_this8","_this9","queryUrl","replace","encodeURIComponent","microstart","res","microtaken","alert","toggleData","toggleExpandedForAll","expand","questionid","varname","_step6","_this11","datasources","fetchQuery","extracounter","_iterator6","oneextra","queryURL","sort","a","b","substring","formatted","l","Object","assign","elid","dynvals","getElementById","renderedTableFromJSON","innerHTML","_this12","height","Row","Col","lg","md","backgroundColor","position","bottom","color","fontFamily","textAlign","padding","margin","clear","sm","onSubmit","preventDefault","window","location","reload","overflow","overflowY","render","developersdata"],"mappings":"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","file":"static/js/main.c010a642.chunk.js","sourcesContent":["// copied from http://jsfiddle.net/infiniteluke/908earbh/9/\n// https://stackoverflow.com/questions/47289239/nested-list-using-react\n\n/*\n\t<div id=\"treeSearch\">\n\t\t<div id=\"search\">\n\t\t\t<input>\n\t\t</div>\n\t\t<div id=\"tree\">\n\t\t\t<ul>\n\t\t\t\t<li>titelone</li>\n\t\t\t\t<li>titeltwo\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t[...]\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</<li>\n\t\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t</li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n*/\n\nimport React, { Component } from \"react\";\n\nexport class TreeSearch  extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttreedatafiltered: this.props.treedata\n\t\t};\n\t\t// console.log(this.props.treedata);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"searchTree\">\n\t\t\t\t<NestedTree\n\t\t\t\t\ttreedata={this.state.treedatafiltered}\n\t\t\t\t\tsearchString={this.props.searchString}\n\t\t\t\t\tfullExpansion={this.props.fullExpansion}\n\t\t\t\t\tlastActiveId={this.props.lastActiveId}\n\t\t\t\t\tuseInnerLimits={this.props.useInnerLimits}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport class NestedTree extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props)\n\t}\n\trender() {\n\t\tvar wholetree = this.props.treedata.map((onelement) => {\n\t\t\treturn <NestedNodes\n\t\t\t\ttreedata = {onelement} key={onelement.id}\n\t\t\t\tsearchString={this.props.searchString}\n\t\t\t\tfullExpansion={this.props.fullExpansion}\n\t\t\t\tlastActiveId={this.props.lastActiveId}\n\t\t\t\tuseInnerLimits={this.props.useInnerLimits}\n\t\t\t/>\n\t\t});\n\t\treturn (\n\t\t\t<div id=\"tree\">\n\t\t\t\t<ul id=\"whole\" className={this.props.searchString.length ? \"searchmode\" : \"\"}>\n\t\t\t\t\t{wholetree}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport class NestedNodes extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props)\n\t\t// https://codepen.io/_danko/pen/yJqRWr\n\t\tthis.handleClick = this.handleClick.bind(this)\n\t\tthis.thisopen = false\n\t}\n\thandleClick() {\n\t\tthis.thisopen = !this.thisopen\n\t\tthis.setState({})\n\t}\n\tresetClick() {\n\t\tthis.thisopen = false; // there should be a possibility to call this reset function on the click of the collapse button\n\t}\n\trenderChild = (child) => {\n\t\t// console.log(child);\n\t\t// this.key = child.id;\n\t\t// console.log(this.props.searchString + ' ' + child.title.indexOf(this.props.searchString) + ' ' + child.title);\n\t\t// JSON.stringify(node.title).toLowerCase().indexOf(searchQuery.toLowerCase())\n\t\t// var tmpfound = child.title.indexOf(this.props.searchString) > 0;\n\t\tvar tmpfoundhere = JSON.stringify(child.title).toLowerCase().indexOf(this.props.searchString.toLowerCase())\n\t\tvar tmpfoundlower = JSON.stringify(child).toLowerCase().indexOf(this.props.searchString.toLowerCase());\n\t\tvar actualclassnames = [\n\t\t\tchild.id,\n\t\t\tthis.thisopen || this.props.fullExpansion || this.props.searchString.length ? \"open\" : \"closed\",\n\t\t\tthis.props.searchString.length && tmpfoundhere > 0 ? \"searchstringfound\" : \"\",\n\t\t\tthis.props.searchString.length && tmpfoundlower > 0 ? \"searchstringfoundlower\" : \"\",\n\t\t\tthis.props.searchString.length && tmpfoundhere < 0 && tmpfoundlower < 0 ? \"searchstringnotfound\" : \"\",\n\t\t\tchild.id === this.props.lastActiveId ? \"lastActive\" : \"\",\n\t\t].join(' ');\n\t\t// console.log(child.title + \" --- \" + typeof(child.children));\n\t\t// console.log(child.title + \" --- \" + actualclassnames);\n\t\tif (typeof(child.children) === 'undefined') {\n\t\t\t// this.state.searchString\n\t\t\t// console.log(child);\n\t\t\t// console.log(this.props);\n\t\t\tvar btnestsec = '';\n\t\t\tif (typeof(child.estimatedSeconds) != 'undefined' && this.props.useInnerLimits === true) {\n\t\t\t\tbtnestsec = <button className=\"btn btn-warning btn-sm\" title=\"estimated runtime of original query\" style={{ fontSize: \"0.666em\"}} disabled>{(child.estimatedSeconds*2).toString().toHHMMSS()}</button>\n\t\t\t} else if (typeof(child.estimatedSeconds) != 'undefined') {\n\t\t\t\tbtnestsec = <button className=\"btn btn-secondary btn-sm\" title=\"estimated runtime of original query with limited results\" style={{ fontSize: \"0.666em\"}} disabled>{(child.estimatedSeconds*2).toString().toHHMMSS()}</button>\n\t\t\t} else {\n\t\t\t\tbtnestsec = '';\n\t\t\t}\n\t\t\treturn(\n\t\t\t\t<li key={child.id} data-haschild=\"false\" className={actualclassnames}><div className=\"title\">{child.title} {btnestsec}</div></li>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<li key={child.id} data-haschild=\"true\" className={actualclassnames}><div className=\"title\" onClick={this.handleClick} ><div className=\"plusminus\" ></div>{child.title}</div>\n\t\t\t\t\t<ul key={child.id}>\n\t\t\t\t\t\t{child.children.map(child => {\n\t\t\t\t\t\t\treturn <NestedNodes\n\t\t\t\t\t\t\t\ttreedata={child} key={child.id}\n\t\t\t\t\t\t\t\tsearchString={this.props.searchString}\n\t\t\t\t\t\t\t\tfullExpansion={this.props.fullExpansion}\n\t\t\t\t\t\t\t\tlastActiveId={this.props.lastActiveId}\n\t\t\t\t\t\t\t\tuseInnerLimits={this.props.useInnerLimits}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t); \n\t\t}\n\t}\n\n\trender() {\n\t\treturn [this.renderChild(this.props.treedata)]\n\t}\n}\n\nexport default TreeSearch;\n// include in index.js - React.render(<TreeSearch teams={teams} />, document.body);","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { toggleExpandedForAll } from \"react-sortable-tree\"; // SortableTree, \nimport 'react-sortable-tree/style.css';\nimport { addNodeUnderParent } from \"react-sortable-tree\"; // find\nimport Select from 'react-select';\nimport { Async } from 'react-select'; // https://react-select.com/async\nimport fetch from 'isomorphic-fetch';\nimport './appstyles.css';\nimport dbgidata from './dbgidata.json'; // https://stackoverflow.com/questions/29452822/how-to-fetch-data-from-local-json-file-on-react-native/37781882#37781882\nimport { Row, Col } from  'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'codemirror/lib/codemirror.css';\nimport TreeSearch from './treeSearchReact.js';\nvar Codemirror = require('react-codemirror');\nrequire('codemirror/mode/sparql/sparql');\nconst varmasker = \"$$\"; // our vars are marked like $$genes$$\n\nconst defaultSparqlMessage = \"\" // Enter SPARQL query here or select one of the templates on the left - we should use \"placeholder\"\nconst reactStringReplace = require('react-string-replace');\n\nclass SparqlInputField extends Component {\n\trender() {\n\t\tvar options = {\n\t\t\tlineNumbers: true,\n\t\t\tmode: 'sparql',\n\t\t\t// plaeholder does not work today in this version ... \n\t\t\tplaceholder: \"Enter SPARQL query here or select one of the templates on the left\"\n\t\t};\n\n\t\tvar currentSPARQLmessage = defaultSparqlMessage;\n\t\tif (this.props.superState.query !== '') {\n\t\t\tcurrentSPARQLmessage = this.props.superState.query;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4 style={{ display: 'inline-block', marginRight:\"20px\"}}> SPARQL Query Editor </h4>\n\t\t\t\t<div>\n\t\t\t\t<Codemirror\n\t\t\t\t\tref=\"cm\"\n\t\t\t\t\tvalue={currentSPARQLmessage}\n\t\t\t\t\tonChange={this.props.updateCode.bind(this)}\n\t\t\t\t\tonKeyPress={this.props.updateCode.bind(this)}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tdefaultValue={this.props.defaultValue}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={this.props.handleSubmit} className=\"btn btn-success\"> &gt; run this query </button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/*eslint no-extend-native: [\"error\", { \"exceptions\": [\"String\"] }]*/\nString.prototype.toHHMMSS = function () {\n\tvar sec_num = parseInt(this, 10); // don't forget the second param\n\tvar hours   = Math.floor(sec_num / 3600);\n\tvar minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n\tvar seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n\tif (hours   < 10) {hours   = \"0\"+hours;}\n\tif (minutes < 10) {minutes = \"0\"+minutes;}\n\tif (seconds < 10) {seconds = \"0\"+seconds;}\n\treturn hours+':'+minutes+':'+seconds;\n}\n\nclass ExtraTarget extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = { time: 0 };\n\t\tthis.result = null;\n\t}\n\tcomponentDidMount() {\n\t\tthis.interval = setInterval(() => this.setState({ time: Date.now() }), 60000);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval);\n\t}\n\tisAvailable = (targetURL) => {\n\t\tvar timeout = new Promise((resolve, reject) => {\n\t\t\tsetTimeout(reject, 1000, 'Request timed out');\n\t\t});\n\t\tvar request = fetch(targetURL);\n\t\t// var result = 'server state unknown';\n\t\tPromise\n\t\t\t.race([timeout, request])\n\t\t\t.then(response => {this.result = 'server is online';})\n\t\t\t.catch(error => {this.result = 'server is offline or slow'})\n\t\treturn this.result;\n\t}\n\trender() {\n\t\tvar targetExplanation = 'the query will be answered directly by the source db';\n\t\tif (this.props.superState.queryTargetShort === 'https://biosoda.expasy.org:4443/sparql') {\n\t\t\ttargetExplanation = 'the query will be sent to the federation server to fullfill the federated service calls';\n\t\t}\n\n\t\tvar isAvNow = this.isAvailable(this.props.superState.queryTargetShort);\n\n\t\treturn(\n\t\t\t<span> ({ targetExplanation }) - {isAvNow} - last check: { new Date(Date.now()).toLocaleString() }</span>\n\t\t)\n\t}\n}\n\nclass ServicePoints extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\trender() {\n\t\tvar allpoints = dbgidata.possibleServices.map((onepoint) => {\n\t\t\treturn <ServicePoint\n\t\t\t\tkey = {onepoint.name}\n\t\t\t\tname = {onepoint.name}\n\t\t\t\tmoreinfo = {onepoint.moreinfo}\n\t\t\t\tpopup = {onepoint.popup}\n\t\t\t\turlquery = {onepoint.urlquery}\n\t\t\t\tlastUpdate = {this.props.lastUpdate}\n\t\t\t/>\n\t\t});\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div dangerouslySetInnerHTML={{__html: \"Status of the queried service points: \"}}></div>\n\t\t\t\t{allpoints}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\n\nclass ServicePoint extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tstatus: [],\n\t\t\terror: null,\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.fetchStatus();\n\t}\n\tcomponentDidUpdate(prevProps, prevStatus) {\n\t\tif (prevProps.lastUpdate !== this.props.lastUpdate) {\n\t\t\tthis.fetchStatus();\n\t\t}\n\t}\n\tfetchStatus() {\n\t\tfetch(\n\t\t\tthis.props.urlquery,\n\t\t\t{ \n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t//'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t// 'bioSODA': 'YESS',\n\t\t\t\t\t 'Accept': 'application/sparql-results+json, */*;q=0.5',\n\t\t\t\t\t// 'Content-Type': 'multipart/form-data',\n\t\t\t\t\t// 'mode': 'no-cors', // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors/43268098#43268098\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t// We get the API response and receive data in JSON format...\n\t\t.then(response => response.json() )\n\t\t.then(data => {// check here to find ok or not\n\t\t\tconsole.log(data);\n\t\t\tthis.setState({\n\t\t\t\tstatus: data,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: null\n\t\t\t})\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error);\n\t\t\tthis.setState({ error: error, isLoading: false })\n\t\t})\n\t}\n\trender() {\n\t\t// this.fetchStatus();\n\t\tconst { isLoading, status, error } = this.state;\n\t\tvar tmpclass = 'danger';\n\t\t(!isLoading && error === null ) ? tmpclass = 'success' : tmpclass = 'warning';\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t <a href={this.props.moreinfo} target=\"_blank\" rel=\"noopener noreferrer\" key={\"service_\"+this.props.name} className={\"btn btnmenu btn-\" + tmpclass } title={ this.props.popup }>{\" \" + this.props.name}</a>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nclass Progressbar extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprog: 0,\n\t\t\testimate: this.props.estimatedRuntime,\n\t\t\tstartSeconds: Date.now()\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(this.randomWidth.bind(this), 100);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\trandomWidth() {\n\t\tvar thisNow = Date.now();\n\t\tvar totalRun = thisNow - this.state.startSeconds;\n\t\tvar newProgress = (1 - Math.exp(-1.5*totalRun/this.state.estimate/1000))*100; // thanks Christophe\n\t\t// var newProgress = totalRun/this.state.estimate/1000;\n\t\t// this.setState({ prog: Math.floor(Math.random()*100) }); // epileptic\n\t\tthis.setState({ prog: newProgress });\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"progress-bar progress-bar-striped progress-bar-animated\"\n\t\t\t\trole=\"progressbar\"\n\t\t\t\tstyle={{ width: this.state.prog + '%' }}\n\t\t\t\taria-valuemin=\"0\"\n\t\t\t\taria-valuemax=\"100\">\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass App extends Component {\n\n\t_handleKeyPress (e) {\n\t  if (e.key === 'Enter') {\n\t\tthis.handleSubmit();\n\t  }\n\t}\n\n\tnode_logger(goal, name, query, timetaken) {\n\t\treturn false;\n\t\tvar logbody = JSON.stringify({\n\t\t\tgoal: goal,\n\t\t\tname: name,\n\t\t\tquery: query,\n\t\t\ttimetaken: timetaken\n\t\t});\n\t\tfetch('http://biosoda.expasy.org:3002/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: logbody\n\t\t});\n\t}\n\n\tupdateCode(code = '', triggerFrom = '') {\n\t\t/*console.log('code: ');\n\t\tconsole.log(code);\n\t\tconsole.log('triggy: ');\n\t\tconsole.log(triggerFrom);\n\t\tconsole.log(typeof(triggerFrom));*/\n\t\tif (typeof(this.refs.sparqy) !== \"undefined\") {\n\t\t\tvar newCode = this.refs.sparqy.refs.cm.getCodeMirror().doc.getValue();\n\t\t\tthis.setState({\n\t\t\t\tquery: newCode,\n\t\t\t\tmode: 'sparql',\n\t\t\t});\n\t\t\tif (typeof(triggerFrom) == 'object') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tqueryHuman: 'manually altered SPARQL query',\n\t\t\t\t\testimatedRuntime: 'not known - <a href=\"https://www.forbes.com/sites/gilpress/2015/07/29/turing-award-winner-stonebraker-on-the-future-of-taming-big-data/#54c0a84134e5\" target=\"_blank\">not calculateable</a> - hold on',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn true; // is needed to break the asynchronity\n\t};\n\n\thandleShow(nodeid) {\n\t\tthis.setState({ showSparql: true, lastActiveId: nodeid });\n\t\t// here we should re-render the whole menu tree\n\t\tthis['updateQuery_' + nodeid]();\n\t}\n\n\thandleRun(nodeid) { // only called when user wants to run the question directly\n\t\tthis.setState({ lastActiveId: nodeid });\n\t\tif (this['updateQuery_' + nodeid]()) {\n\t\t\tif(this.updateCode()) {\n\t\t\t\tthis.setState({ asyncWaiter: 1 }, // workaround the asynchronity of setState\n\t\t\t\t() => {\n\t\t\t\t\tthis.handleSubmit();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSubmit() {\n\t\tvar query = this.state.query;\n\t\tvar queryUrl = this.state.queryTarget.replace(varmasker + 'query' + varmasker, encodeURIComponent(query)) // encodeURIComponent(dbgidata.prefixes)\n\t\t\t.replace(varmasker + 'offset' + varmasker, this.state.lookupOffset)\n\t\t\t.split(' ').join('+')\n\t\t\t// these splinters crash somehow on some endpoints:\n\t\t\t//.split('%20').join('+') // blank\n\t\t\t//.split('%0A').join('+') // new line\n\t\t\t//.split('%0D').join('+') // carriage return\n\t\t\t//.split('%09').join('+') // tab\n\t\t\t//.trim('+')\n\t\tif (this.state.useInnerLimits === true) {\n\t\t\tqueryUrl = queryUrl.replace(varmasker + '&limit=limit' + varmasker, '&limit=' + this.state.lookupLimit)\n\t\t} else {\n\t\t\tqueryUrl = queryUrl.replace(varmasker + '&limit=limit' + varmasker, '')\n\t\t}\n\n\t\tvar queryHeaders = this.state.queryHeaders;\n\t\tthis.displayResults('');\n\t\tthis.state.servicepointsUpdated = Date.now();\n\t\t// this.node_logger('SPARQL', query, 'before', 0);\n\t\tvar microstart = Date.now();\n\t\treturn fetch(queryUrl, {headers: queryHeaders})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n\t\t\t\tvar microend = Date.now();\n\t\t\t\tvar microtaken = microend - microstart;\n\t\t\t\t// this.node_logger('SPARQL', query, 'after.resultcount: ' + result.results.bindings.length, microtaken);\n\t\t\t\tthis.displayResults(result, microtaken);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthis.setState({ hasResults: false, showSpinner: false })\n\t\t\t\talert(\"Error! \"+ error);\n\t\t\t}\n\t\t)\n\t}\n\n  expand(expanded) {\n\tvar toggleData = toggleExpandedForAll({\n            treeData: this.state.treeData,\n            expanded,\n        });\n    this.setState({\n        treeData: toggleData,\n    });\n  }\n  collapseAll() {\n\tthis.setState({ expanded: false });\n    this.expand(false);\n  }\n  \n  expandAll() {\n\tthis.setState({ expanded: true });\n    this.expand(true);\n  }\n\n  constructor(props) {\n\tsuper(props);\n\tdocument.title = \"dbgi web frontend\";\n\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\tthis._handleKeyPress = this._handleKeyPress.bind(this);\n\n\tthis.updateCode = this.updateCode.bind(this);\n\tthis.handleShow = this.handleShow.bind(this);\n\tthis.handleRun = this.handleRun.bind(this);\n\n\tthis.expandAll = this.expandAll.bind(this);\n\tthis.collapseAll = this.collapseAll.bind(this);\n\tthis.displayResults = this.displayResults.bind(this);\n\n\tthis.state = {\n\t\tsearchString: '',\n\t\tshowSparql: false,\n\t\tshowSpinner: false,\n\t\tsparqlEndpointURL: '',\n\t\thasResults: false,\n\t\tservicepointsUpdated: Date.now(),\n\t\tvalue: '',\n\t\tdynamicvals: [],\n\t\ttreeData: [],\n\t\tresultOffset: 0,\n\t\tresultLimit: 10,\n\t\tlookupLimit: 100, // limits the results on var sparql lookups\n\t\tuseInnerLimits: true, // the inner limits may produce at least some data before timeout\n\t\tlookupOffset: 0, // probably never changes but who knows ;-)\n\t\tquery: '', // SPARQL query to display in the SPARQL query editor\n\t\tqueryHuman: 'none of our prepared queries', // human understandable query aka question\n\t\testimatedRuntime: 'unknown', // where applicable\n\t\tqueryTarget: 'http://dbgi.vital-it.ch:7200/repositories/dbgi-enpkg?query=$$query$$&format=JSON&limit=$$limit$$&offset=$$offset$$&inference=false', // where to send the SPARQL query\n\t\tqueryTargetShort: 'http://dbgi.vital-it.ch:7200/repositories/dbgi-enpkg',\n\t\tqueryHeaders: {},\n\t\tasyncWaiter : '',\n\t\texpanded: false,\n\t};\n\n\t// functionalities taken from lodestar/lode.js\n\tthis['renderedTableFromJSON'] = (json) => {\n\t\tvar eltable = document.createElement('table');\n\t\tvar _results = json.results.bindings;\n\t\tvar _variables = json.head.vars;\n\t\tvar elthead = document.createElement('thead');\n\t\tfor (let onevar of _variables) {\n\t\t\tif (onevar.endsWith('_noshow')) break;\n\t\t\tvar elth = document.createElement('th');\n\t\t\telth.appendChild(document.createTextNode(onevar));\n\t\t\telthead.appendChild(elth);\n\t\t}\n\t\teltable.appendChild(elthead);\n\t\tfor (let row of _results) {\n\t\t\tvar elrow = document.createElement('tr');\n\t\t\tfor (let onevar of _variables) {\n\t\t\t\t// console.log(onevar);\n\t\t\t\tif (!onevar.endsWith('_noshow')) {\n\t\t\t\t\tvar eltd = document.createElement('td');\n\t\t\t\t\t// row[onevar].type holds the type of the element uri, int, bool, ...\n\t\t\t\t\tif (typeof(row[onevar]) !== \"undefined\" && row[onevar].type === 'uri') {\n\t\t\t\t\t\tvar link = document.createElement('a');\n\t\t\t\t\t\tvar text = document.createTextNode(row[onevar].value);\n\t\t\t\t\t\tlink.appendChild(text);\n\t\t\t\t\t\tlink.title = 'linked resource';\n\t\t\t\t\t\tlink.href = row[onevar].value;\n\t\t\t\t\t\tlink.target = '_blank';\n\t\t\t\t\t\teltd.appendChild(link);\n\t\t\t\t\t} else if (typeof(row[onevar]) !== \"undefined\") {\n\t\t\t\t\t\teltd.appendChild(document.createTextNode(row[onevar].value));\n\t\t\t\t\t}\n\t\t\t\t\telrow.appendChild(eltd);\n\t\t\t\t}\n\t\t\t}\n\t\t\teltable.append(elrow);\n\t\t}\n\t\treturn(eltable);\n\t}\n\n\t// https://stackoverflow.com/questions/15523514/find-by-key-deep-in-a-nested-object\n\t// https://github.com/frontend-collective/react-sortable-tree/issues/49\n\t// two kind of nodes: structure and questions\n\tdbgidata.structure.forEach(function(element) {\n\t\tlet NEW_NODE  = {\n\t\t\tid: element.id,\n\t\t\ttitle: element.title,\n\t\t};\n\t\tlet newTree = addNodeUnderParent({\n\t\t\ttreeData: this.state.treeData,\n\t\t\tnewNode: NEW_NODE,\n\t\t\texpandParent: true,\n\t\t\tparentKey: element.parentId, // here we want to find the correct key using getParent from link above or similar/better\n\t\t\tgetNodeKey: ({ node }) =>  node.id\n\t\t});\n\t\tthis.state.treeData = newTree.treeData;\n\t}, this);\n\n\tdbgidata.questions.forEach(function(el) {\n\t\tel.parentIds.forEach(function(element) {\n\t\t\tvar functionalQuestion = []; // we need that to have all questions as arrays even if they have no vars\n\t\t\tfunctionalQuestion.push(el.question);\n\t\t\tthis['updateQuery_'+el.id] = (event) => {\n\t\t\t\tvar newsparql = el.SPARQL;\n\t\t\t\tvar humanReadable = el.question;\n\t\t\t\tvar newEstimatedRuntimeSeconds = el.estimatedseconds * 2;\n\t\t\t\tvar estimatedRuntime = (newEstimatedRuntimeSeconds).toString();\n\t\t\t\tif (typeof(estimatedRuntime) == 'undefined') {\n\t\t\t\t\testimatedRuntime = 'unknown';\n\t\t\t\t} else {\n\t\t\t\t\testimatedRuntime = estimatedRuntime.toHHMMSS();\n\t\t\t\t}\n\t\t\t\tif (typeof(el.vars) !== \"undefined\") {\n\t\t\t\t\tfor (let onevar of el.vars) {\n\t\t\t\t\t\tvar tmptype = onevar.type;\n\t\t\t\t\t\tif (tmptype === 'string' || tmptype === 'list' || tmptype === 'simplelist') {\n\t\t\t\t\t\t\tvar originalval = varmasker + onevar.name + varmasker;\n\t\t\t\t\t\t\tvar replaceval;\n\t\t\t\t\t\t\tvar replacevalhuman;\n\t\t\t\t\t\t\tif (typeof(this.state.dynamicvals[el.id]) === 'undefined' || typeof(this.state.dynamicvals[el.id][onevar.name]) === 'undefined' || typeof(this.state.dynamicvals[el.id][onevar.name]['label']) === 'undefined') {\n\t\t\t\t\t\t\t\tif (typeof(onevar.defaultvalue) === \"undefined\") onevar.defaultvalue = onevar.default;\n\t\t\t\t\t\t\t\treplaceval = onevar.defaultvalue;\n\t\t\t\t\t\t\t\treplacevalhuman = onevar.default;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treplaceval = this.state.dynamicvals[el.id][onevar.name]['value'];\n\t\t\t\t\t\t\t\tif (typeof (this.state.dynamicvals[el.id][onevar.name]['label']) !== \"undefined\") {\n\t\t\t\t\t\t\t\t\treplacevalhuman = this.state.dynamicvals[el.id][onevar.name]['label'];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treplacevalhuman = this.state.dynamicvals[el.id][onevar.name]['value'];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnewsparql = newsparql.split(originalval).join(replaceval.split(\"'\").join(\"\\\\'\")); // better than .replace because it replaces all of the occurences\n\t\t\t\t\t\t\thumanReadable = humanReadable.split(originalval).join(replacevalhuman); // better than .replace because it replaces all of the occurences\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.state.useInnerLimits === true) {\n\t\t\t\t\tnewsparql = newsparql.split(varmasker + 'innerlimit' + varmasker).join('LIMIT ' + this.state.resultLimit);\n\t\t\t\t\tnewsparql = newsparql.split(varmasker + 'innerlimit10' + varmasker).join('LIMIT ' + this.state.resultLimit * 10);\n\t\t\t\t} else {\n\t\t\t\t\tnewsparql = newsparql.split(varmasker + 'innerlimit' + varmasker).join('');\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ query: newsparql, queryTarget: el.fetchUrl, queryTargetShort: el.fetchUrlShort, queryHeaders: el.queryHeaders, queryHuman: humanReadable, estimatedRuntime: estimatedRuntime, estimatedRuntimeSeconds: newEstimatedRuntimeSeconds });\n\t\t\t\tif(typeof(this.refs.sparqy) !== 'undefined') {\n\t\t\t\t\tthis.refs.sparqy.refs.cm.getCodeMirror().doc.setValue(newsparql);\n\t\t\t\t}\n\t\t\t\treturn true; // is needed to break the asynchronity - is it?\n\t\t\t};\n\t\t\tif (typeof(el.vars) !== \"undefined\") {\n\t\t\t\tfor (let onevar of el.vars) {\n\t\t\t\t\tif (onevar.type ==='string') {\n\t\t\t\t\t\tfunctionalQuestion = reactStringReplace(functionalQuestion, varmasker + onevar.name + varmasker, (match, i) => (<input\n\t\t\t\t\t\t\tkey={onevar.name}\n\t\t\t\t\t\t\tname={onevar.name}\n\t\t\t\t\t\t\tid={el.id + \"_\" + onevar.name}\n\t\t\t\t\t\t\tdefaultValue={onevar.default}\n\t\t\t\t\t\t\tonChange={(evt) => this.handleChange(evt.value, el.id, onevar.name, evt)}\n\t\t\t\t\t\t/>));\n\t\t\t\t\t}\n\t\t\t\t\tif (onevar.type === 'simplelist') {\n\t\t\t\t\t\tvar tmpoptions = onevar.listvalues;\n\t\t\t\t\t\t// if is defined listlabels, we can add them also\n\t\t\t\t\t\t\n\t\t\t\t\t\tfunctionalQuestion = reactStringReplace(functionalQuestion, varmasker + onevar.name + varmasker, (match, i) => (<Select\n\t\t\t\t\t\t\tkey={onevar.name}\n\t\t\t\t\t\t\tname={onevar.name}\n\t\t\t\t\t\t\tid={el.id + \"_\" + onevar.name}\n\t\t\t\t\t\t\tdefaultValue={{value: onevar.defaultvalue, label: onevar.default}}\n\t\t\t\t\t\t\tclassNamePrefix=\"my-select\"\n\t\t\t\t\t\t\toptions = {tmpoptions}\n\t\t\t\t\t\t\tclassName=\"reactSelect\"\n\t\t\t\t\t\t\tonChange={(evt) => this.handleChangeSelect(el.id, onevar.name, evt)}\n\t\t\t\t\t\t/>));\n\t\t\t\t\t}\n\t\t\t\t\tif (onevar.type === 'list') {\n\t\t\t\t\t\tif (onevar.flavour === 'autocomplete') {\n\t\t\t\t\t\t\tthis['fetchAutocomplete_'+onevar.name] = function(searchKey) {\n\t\t\t\t\t\t\t\tvar searchFilter = [];\n\t\t\t\t\t\t\t\tif (typeof(onevar.fullList) !== \"undefined\" && onevar.fullList === true) {\n\t\t\t\t\t\t\t\t\tsearchKey = '';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof(onevar.extrafilter) !== \"undefined\") {\n\t\t\t\t\t\t\t\t\tsearchFilter = onevar.extrafilter;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this.fetchAutocompleteBiosoda(onevar.datasource, searchKey, el.id, onevar.name, searchFilter);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfunctionalQuestion = reactStringReplace(functionalQuestion, varmasker + onevar.name + varmasker, (match, i) => (<Async\n\t\t\t\t\t\t\tkey={onevar.name}\n\t\t\t\t\t\t\tname={onevar.name}\n\t\t\t\t\t\t\tid={el.id + \"_\" + onevar.name}\n\t\t\t\t\t\t\tclassNamePrefix=\"my-select\"\n\t\t\t\t\t\t\tclassName=\"autocomplete\"\n\t\t\t\t\t\t\tdataExtrafilter={onevar.extrafilter}\n\t\t\t\t\t\t\tdefaultValue={{label: onevar.default}}\n\t\t\t\t\t\t\tnoOptionsMessage={({ inputValue }) => !inputValue && 'Type keyword above to perform search. Found options will be listed here ...'}\n\t\t\t\t\t\t\tonChange={(evt) => this.handleChange(evt.value, el.id, onevar.name, evt)}\n\t\t\t\t\t\t\tcacheOptions loadOptions={this['fetchAutocomplete_'+onevar.name].bind(this)}\n\t\t\t\t\t\t/>));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunctionalQuestion.push(<button key={'showSPARQL_' + el.id} className=\"btn btn-primary buttonInfo\" title=\"show query in SPARQL query editor\" onClick={() => this.handleShow(el.id)}>i</button>);\n\t\t\tfunctionalQuestion.push(<button key={'submitquery_' + el.id} className=\"btn btn-success buttonSubmit\" title=\"directly run this query\" onClick={() => this.handleRun(el.id)}>&gt;</button>);\n\n\t\t\tif (typeof(el.fullHTML) !== \"undefined\") {\n\t\t\t\tfunctionalQuestion = [];\n\t\t\t\tfunctionalQuestion.push(<div key={el.id} dangerouslySetInnerHTML={{__html: el.question}} code={el.question} />);\n\t\t\t}\n\n\t\t\tlet NEW_NODE  = {\n\t\t\t\tid: el.id,\n\t\t\t\ttitle: functionalQuestion,\n\t\t\t\testimatedSeconds: el.estimatedseconds\n\t\t\t};\n\n\t\t\tlet newTree = addNodeUnderParent({\n\t\t\t\ttreeData: this.state.treeData,\n\t\t\t\tnewNode: NEW_NODE,\n\t\t\t\texpandParent: true,\n\t\t\t\tparentKey: element, // here we want to find the correct key using getParent from link above or similar/better\n\t\t\t\tgetNodeKey: ({ node }) =>  node.id\n\t\t\t});\n\t\t\tthis.state.treeData = newTree.treeData;\n\t\t}, this);\n\t}, this);\n}\n\n\tfetchAutocompleteBiosoda(datasource, searchString, questionid, varname, searchFilter){\n\t\t// this.node_logger('async_'+questionid+\"_\"+varname, datasource, searchString, 0);\n\t\tvar query = dbgidata.datasources[datasource].fetchQuery.split(varmasker + 'searchString' + varmasker).join(searchString.toLowerCase())\n\n\t\t// searchFilter contains a list of extrafilters which have to be taken into account\n\t\tvar extracounter = 0;\n\t\tfor (let oneextra of searchFilter) {\n\t\t\tconsole.log(extracounter);\n\t\t\tquery = query.split(varmasker + 'extra_' + extracounter + varmasker).join('fruit fly');\n\t\t\tconsole.log('replace species @585');\n\t\t\tconsole.log(oneextra);\n\t\t\textracounter++;\n\t\t}\n\n\t\tvar queryURL = dbgidata.datasources[datasource].fetchUrl.replace(varmasker + 'query' + varmasker, encodeURIComponent(query))\n\t\t\t.replace(varmasker + '&limit=limit' + varmasker, '&limit=' + this.state.lookupLimit)\n\t\t\t.replace(varmasker + 'offset' + varmasker, this.state.lookupOffset)\n\t\t\t.replace(' ', '+');\n\n\t\tvar queryHeaders = dbgidata.datasources[datasource].queryHeaders;\n\t\treturn fetch(queryURL, {headers: queryHeaders})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\t// we want to sort the results like this: exact match, startswith, endswith, contains\n\t\t\t\tjson.results.bindings.sort( (a,b) => {\n\t\t\t\t\t// same strings\n\t\t\t\t\tif (a.value.value === b.value.value) return 0;\n\t\t\t\t\t// if everything else is sorted, we go after the alphabet\n\t\t\t\t\tif (\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\ta.value.value.toLowerCase().substring(a.length- searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t\t&&\n\t\t\t\t\t\t\tb.value.value.toLowerCase().substring(b.length- searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t)\n\t\t\t\t\t\t||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\ta.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t\t&&\n\t\t\t\t\t\t\tb.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (a.value.value.toLowerCase() > b.value.value.toLowerCase()) return 1;\n\t\t\t\t\t\tif (a.value.value.toLowerCase() < b.value.value.toLowerCase()) return- 1;\n\t\t\t\t\t}\n\t\t\t\t\t// full match a\n\t\t\t\t\tif (a.value.value.toLowerCase() === searchString.toLowerCase()) return -1;\n\t\t\t\t\t// full match b\n\t\t\t\t\tif (b.value.value.toLowerCase() === searchString.toLowerCase()) return 1;\n\t\t\t\t\t// left position a\n\t\t\t\t\tif (a.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()) return -1;\n\t\t\t\t\t// left position b\n\t\t\t\t\tif (b.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()) return 1;\n\t\t\t\t\t// right position a\n\t\t\t\t\tif (a.value.value.toLowerCase().substring(a.length- searchString.length) === searchString.toLowerCase()) return -1;\n\t\t\t\t\t// right position b\n\t\t\t\t\tif (b.value.value.toLowerCase().substring(b.length- searchString.length) === searchString.toLowerCase()) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tconst formatted = json.results.bindings.map((l) => {\n\t\t\t\t\tif (typeof(l.name) === 'undefined') l.name = l.value;\n\t\t\t\t\treturn Object.assign({}, {\n\t\t\t\t\t\tvalue: l.value.value,\n\t\t\t\t\t\tlabel: l.name.value\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\tthis.setState({ options:formatted });\n\t\t\t\t\treturn formatted;\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.error(error)\n\t\t\t\t})\n\t}\n\n\thandleChange (value, elid, varname, evt) {\n\t\tif (typeof(evt.target) !== \"undefined\") {\n\t\t\tvalue = evt.target.value;\n\t\t}\n\t\tvar dynvals = this.state.dynamicvals;\n\t\tif (typeof(dynvals[elid]) == 'undefined') {\n\t\t\tdynvals[elid] = [];\n\t\t}\n\t\tif (typeof(dynvals[elid][varname]) == 'undefined') {\n\t\t\tdynvals[elid][varname] = [];\n\t\t}\n\t\tdynvals[elid][varname]['value'] = value;\n\t\tif (typeof(evt.label) !== \"undefined\") {\n\t\t\tdynvals[elid][varname]['label'] = evt.label;\n\t\t} else {\n\t\t\tdynvals[elid][varname]['label'] = value;\n\t\t}\n\t\tthis.setState({dynamicvals: dynvals});\n\t\tthis['updateQuery_'+elid](); // to show the new query in the SPARQL field\n\t}\n\n\thandleChangeSelect (elid, varname, evt) {\n\t\tvar dynvals = this.state.dynamicvals;\n\t\tif (typeof(dynvals[elid]) == 'undefined') {\n\t\t\tdynvals[elid] = [];\n\t\t}\n\t\tif (typeof(dynvals[elid][varname]) == 'undefined') {\n\t\t\tdynvals[elid][varname] = [];\n\t\t}\n\t\tdynvals[elid][varname]['value'] = evt.value;\n\t\tdynvals[elid][varname]['label'] = evt.label;\n\t\tthis.setState({dynamicvals: dynvals});\n\t\tthis['updateQuery_'+elid](); // to show the new query in the SPARQL field\n\t}\n\n\tdisplayResults (result, microtaken) {\n\t\tif (result !== '') {\n\t\t\tthis.setState({ hasResults: true, showSpinner: false })\n\t\t\tdocument.getElementById('results').appendChild(document.createTextNode('Time taken: ' + microtaken/1000 + ' s, result count: ' + result.results.bindings.length));\n\t\t\tif (result.results.bindings.length > 0) {\n\t\t\t\tdocument.getElementById('results').appendChild(this.renderedTableFromJSON(result));\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.getElementById('results').innerHTML = \"\";\n\t\t\tthis.setState({ showSpinner: true });\n\t\t}\n\t}\n\n  render() {\n\tconst { searchString } = this.state;\n\treturn (\n\t\t<div style={{ height: 700 }}>\n\t\t<Row>\n\t\t\t<Col lg={6} md={12}>\n\t\t\t\t<h3 style={{\n\t\t\t\t\t'backgroundColor': 'white'\n\t\t\t\t}}>\n\t\t\t\t\t<strong>Bio</strong>-Query\n\t\t\t\t\t<span style={{ fontSize: \"0.6em\", position: 'relative', bottom: '0.6em', color: 'red', fontFamily: 'monospace' }} title=\"BETA-Version - Working prototype with limited functionality\">β</span>:\n\t\t\t\t\tFederated template <strong>s</strong>earch <strong>o</strong>ver biological <strong>da</strong>tabases (<u><strong>DBGI</strong></u> Edition) \n\t\t\t\t</h3>\n\t\t\t</Col>\n\t\t\t<Col  lg={6} md={12} id=\"services\" style={{\n\t\t\t\ttextAlign: 'right',\n\t\t\t\tbackgroundColor: 'rgba(222,222,222,0.222)',\n\t\t\t\tpadding: '0.222em',\n\t\t\t\tmargin: '0.222em auto'\n\t\t\t\t// whiteSpace: 'nowrap'\n\t\t\t}}>\n\t\t\t\t<ServicePoints ref=\"servicepoints\" lastUpdate={ this.state.servicepointsUpdated } />\n\t\t\t</Col>\n\t\t</Row>\n\t\t<Row style={{\n\t\t\tclear: 'both'\n\t\t}}>\n\t\t\t<Col sm={this.state.showSparql? \"7\": \"12\"}>\n\t\t\t<form\n\t\t\t  style={{\n\t\t\t\t  display: 'inline-block',\n\t\t\t\t  'backgroundColor': 'white'\n\t\t\t\t}}\n\t\t\t  onSubmit={event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t  }}\n\t\t\t>\n\t\t\t  <input\n\t\t\t\tid=\"find-box\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Search our queries...\"\n\t\t\t\tvalue={searchString}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tthis.setState({ searchString: event.target.value });\n\t\t\t\t\t// this.node_logger('topsearch', event.target.value, '', 0);\n\t\t\t\t}}\n\t\t\t  />\n\t\t\t{ !this.state.expanded ?\n\t\t\t\t<button className=\"btn btn-primary btnmenu\" onClick={this.expandAll}>\n\t\t\t\t\tExpand All\n\t\t\t\t</button>\n\t\t\t\t:\n\t\t\t\t<button className=\"btn btn-warning btnmenu\" onClick={this.collapseAll}>\n\t\t\t\t\tCollapse All\n\t\t\t\t</button>\n\t\t\t}\n\n            {\n              this.state.showSparql ?\n              <button\n                className=\"btn btnmenu\"\n                style={{ backgroundColor: \"#00FFFF\"}}\n                onClick={() => this.setState({ showSparql: false })}\n              >\n              Hide SPARQL Query Editor\n            </button>\n               :\n               <button\n                 className=\"btn btnmenu\"\n                 style={{backgroundColor: \"#00FFFF\"}}\n                 onClick={() => this.setState({ showSparql: true })}\n               >\n               Show SPARQL Query Editor\n             </button>\n            }\n\n\t\t\t{\n              this.state.useInnerLimits ?\n              <button\n                className=\"btn btnmenu\"\n                style={{ backgroundColor: \"#00FFFF\"}}\n                onClick={() => {\n\t\t\t\t\tthis.setState({ useInnerLimits: false});\n\t\t\t\t\tif(typeof(this.refs.sparqy) !== 'undefined') {\n\t\t\t\t\t\tthis.refs.sparqy.refs.cm.getCodeMirror().doc.setValue('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttitle=\"if you use inner limits, you can reduce the time to load the results. you probably won't get all of the rows but you can see if your query works as expected\"\n              >\n              Limited results are on\n            </button>\n               :\n               <button\n                 className=\"btn btnmenu\"\n                 style={{backgroundColor: \"#00FFFF\"}}\n                 onClick={() => {\n\t\t\t\t\tthis.setState({ useInnerLimits: true });\n\t\t\t\t\tif(typeof(this.refs.sparqy) !== 'undefined') {\n\t\t\t\t\t\tthis.refs.sparqy.refs.cm.getCodeMirror().doc.setValue('')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t title=\"if you don't use inner limits, you can run into a timeout if your query asks for too much data\"\n               >\n              Limited results are off\n             </button>\n            }\n\n\t\t\t<button className=\"btn btn-success btnmenu\" onClick={() => window.location.reload()}  rel=\"noopener noreferrer\">\n\t\t\t\tReset / Reload\n\t\t\t</button>\n\n\t\t\t<a className=\"btn btn-light btnmenu\" href=\"https://github.com/biosoda/bioquery\" target=\"_blank\"  rel=\"noopener noreferrer\">\n\t\t\t\tAbout\n\t\t\t</a>\n\n\t\t\t\n\t\t\t</form>\n\t\t\t\t<div style={{ height: '700px', overflow: 'hidden', padding: '1em', overflowY: 'auto'}}>\n\t\t\t\t<TreeSearch\n\t\t\t\t\ttreedata={this.state.treeData}\n\t\t\t\t\tsearchString={this.state.searchString}\n\t\t\t\t\tfullExpansion={this.state.expanded}\n\t\t\t\t\tlastActiveId={this.state.lastActiveId}\n\t\t\t\t\tuseInnerLimits={this.state.useInnerLimits}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t</Col>\n\t\t\t { this.state.showSparql ?\n\t\t\t\t<Col sm=\"5\">\n\t\t\t\t\t<SparqlInputField\n\t\t\t\t\t\tref=\"sparqy\"\n\t\t\t\t\t\tdisplayResults={this.displayResults}\n\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\tsuperState={this.state}\n\t\t\t\t\t\tupdateCode={this.updateCode.bind(this)}\n\t\t\t\t\t\tdefaultValue=\"\" // doesn't work because it's not like HTML: Enter SPARQL query here or select one of the templates on the left\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t: null }\n\t\t</Row>\n\t\t{ this.state.showSpinner ?\n\t\t\t<Row id=\"spinnerwheel\">\n\t\t\t\t<Col>\n\t\t\t\t\t<div className=\"progress\">\n\t\t\t\t\t\t<Progressbar estimatedRuntime={this.state.estimatedRuntimeSeconds} />\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t: null }\n\n        <Row id=\"resultscol\">\n\t\t\t<Col>\n\t\t\t\t<div id=\"technical\" style={{display: 'none'}}>\n\t\t\t\t\t<div>Number of results (LIMIT): <span className=\"badge btn-primary\">1</span> <span className=\"badge btn-primary\">10</span> <span className=\"badge btn-primary\">25</span></div>\n\t\t\t\t\t<div>Next page (OFFSET - if available): <span className=\"badge btn-primary\">PREV</span> <span className=\"badge btn-primary\">NEXT</span></div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"askedQuery\" style={{padding: '1em'}}><span>Your Question: </span><span id=\"question\">{this.state.queryHuman}</span></div>\n\t\t\t\t<div id=\"fetchTargetDiv\" style={{padding: '1em'}}><span>Query will be sent to: </span><span id=\"fetchTarget\"><a href={this.state.queryTargetShort} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.queryTargetShort}</a><ExtraTarget superState={this.state} /></span></div>\n\t\t\t\t<div id=\"estimatedRuntime\" style={{padding: '1em'}}><span>Estimated Runtime: </span><span id=\"estimatedRuntime\" dangerouslySetInnerHTML={ {__html: this.state.estimatedRuntime} }></span></div>\n\t\t\t\t<div id=\"results\" ref=\"results\"></div>\n\t\t\t</Col>\n\t   </Row>\n      </div>\n    );\n  }\n}\n\nrender(<App\n\tdevelopersdata = {dbgidata}\n/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}