{"version":3,"sources":["treeSearchReact.js","index.js"],"names":["TreeSearch","_Component","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","treedatafiltered","treedata","inherits","createClass","key","value","react_default","a","createElement","id","treeSearchReact_NestedTree","searchString","fullExpansion","lastActiveId","useInnerLimits","Component","NestedTree","_Component2","_this2","wholetree","map","onelement","treeSearchReact_NestedNodes","className","length","NestedNodes","_Component3","_this3","renderChild","child","tmpfoundhere","JSON","stringify","title","toLowerCase","indexOf","tmpfoundlower","actualclassnames","thisopen","join","children","btnestsec","estimatedSeconds","style","fontSize","disabled","toString","toHHMMSS","data-haschild","onClick","handleClick","bind","assertThisInitialized","setState","Codemirror","require","varmasker","reactStringReplace","SparqlInputField","currentSPARQLmessage","superState","query","display","marginRight","ref","onChange","updateCode","onKeyPress","options","lineNumbers","mode","placeholder","defaultValue","handleSubmit","String","prototype","sec_num","parseInt","hours","Math","floor","minutes","seconds","ExtraTarget","isAvailable","targetURL","timeout","Promise","resolve","reject","setTimeout","request","fetch","race","then","response","result","catch","error","time","interval","setInterval","Date","now","clearInterval","targetExplanation","queryTargetShort","isAvNow","toLocaleString","ServicePoints","allpoints","biosodadata","possibleServices","onepoint","src_ServicePoint","name","moreinfo","popup","urlquery","lastUpdate","Fragment","dangerouslySetInnerHTML","__html","ServicePoint","_this4","isLoading","status","fetchStatus","prevProps","prevStatus","_this5","method","headers","Accept","json","data","console","log","_this$state","tmpclass","href","target","rel","Progressbar","_this6","prog","estimate","estimatedRuntime","startSeconds","timerID","randomWidth","totalRun","newProgress","exp","role","width","aria-valuemin","aria-valuemax","App","_this7","document","_handleKeyPress","handleShow","handleRun","expandAll","collapseAll","displayResults","showSparql","showSpinner","sparqlEndpointURL","hasResults","servicepointsUpdated","dynamicvals","treeData","resultOffset","resultLimit","lookupLimit","lookupOffset","queryHuman","queryTarget","queryHeaders","asyncWaiter","expanded","eltable","_results","results","bindings","_variables","head","vars","elthead","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","onevar","endsWith","elth","appendChild","createTextNode","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","row","elrow","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","eltd","type","link","text","append","structure","forEach","element","NEW_NODE","newTree","addNodeUnderParent","newNode","expandParent","parentKey","parentId","getNodeKey","_ref","node","questions","el","parentIds","_this10","functionalQuestion","push","question","event","newsparql","SPARQL","humanReadable","newEstimatedRuntimeSeconds","estimatedseconds","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","tmptype","replaceval","replacevalhuman","originalval","defaultvalue","default","split","fetchUrl","fetchUrlShort","estimatedRuntimeSeconds","refs","sparqy","cm","getCodeMirror","doc","setValue","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_loop","match","i","evt","handleChange","tmpoptions","listvalues","react_select_esm","label","classNamePrefix","handleChangeSelect","flavour","searchKey","searchFilter","fullList","extrafilter","fetchAutocompleteBiosoda","datasource","dataExtrafilter","noOptionsMessage","_ref2","inputValue","cacheOptions","loadOptions","_iterator5","fullHTML","code","_ref3","e","goal","timetaken","arguments","triggerFrom","newCode","getValue","nodeid","_this8","_this9","queryUrl","replace","encodeURIComponent","microstart","res","microtaken","alert","toggleData","toggleExpandedForAll","expand","questionid","varname","_this11","datasources","fetchQuery","extracounter","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","oneextra","queryURL","sort","b","substring","formatted","l","assign","elid","dynvals","getElementById","renderedTableFromJSON","innerHTML","_this12","height","reactstrap_es","lg","md","backgroundColor","position","bottom","color","fontFamily","textAlign","padding","margin","src_ServicePoints","clear","sm","onSubmit","preventDefault","window","location","reload","overflow","overflowY","treeSearchReact","src_SparqlInputField","src_Progressbar","src_ExtraTarget","render","src_App","developersdata"],"mappings":"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","file":"static/js/main.9e8c8714.chunk.js","sourcesContent":["// copied from http://jsfiddle.net/infiniteluke/908earbh/9/\n// https://stackoverflow.com/questions/47289239/nested-list-using-react\n\n/*\n\t<div id=\"treeSearch\">\n\t\t<div id=\"search\">\n\t\t\t<input>\n\t\t</div>\n\t\t<div id=\"tree\">\n\t\t\t<ul>\n\t\t\t\t<li>titelone</li>\n\t\t\t\t<li>titeltwo\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li></li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t[...]\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</<li>\n\t\t\t\t\t</ul>\n\t\t\t\t\n\t\t\t\t</li>\n\t\t\t\t<li></li>\n\t\t\t\t<li></li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n*/\n\nimport React, { Component } from \"react\";\n\nexport class TreeSearch  extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\ttreedatafiltered: this.props.treedata\n\t\t};\n\t\t// console.log(this.props.treedata);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"searchTree\">\n\t\t\t\t<NestedTree\n\t\t\t\t\ttreedata={this.state.treedatafiltered}\n\t\t\t\t\tsearchString={this.props.searchString}\n\t\t\t\t\tfullExpansion={this.props.fullExpansion}\n\t\t\t\t\tlastActiveId={this.props.lastActiveId}\n\t\t\t\t\tuseInnerLimits={this.props.useInnerLimits}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport class NestedTree extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props)\n\t}\n\trender() {\n\t\tvar wholetree = this.props.treedata.map((onelement) => {\n\t\t\treturn <NestedNodes\n\t\t\t\ttreedata = {onelement} key={onelement.id}\n\t\t\t\tsearchString={this.props.searchString}\n\t\t\t\tfullExpansion={this.props.fullExpansion}\n\t\t\t\tlastActiveId={this.props.lastActiveId}\n\t\t\t\tuseInnerLimits={this.props.useInnerLimits}\n\t\t\t/>\n\t\t});\n\t\treturn (\n\t\t\t<div id=\"tree\">\n\t\t\t\t<ul id=\"whole\" className={this.props.searchString.length ? \"searchmode\" : \"\"}>\n\t\t\t\t\t{wholetree}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport class NestedNodes extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props)\n\t\t// https://codepen.io/_danko/pen/yJqRWr\n\t\tthis.handleClick = this.handleClick.bind(this)\n\t\tthis.thisopen = false\n\t}\n\thandleClick() {\n\t\tthis.thisopen = !this.thisopen\n\t\tthis.setState({})\n\t}\n\tresetClick() {\n\t\tthis.thisopen = false; // there should be a possibility to call this reset function on the click of the collapse button\n\t}\n\trenderChild = (child) => {\n\t\t// console.log(child);\n\t\t// this.key = child.id;\n\t\t// console.log(this.props.searchString + ' ' + child.title.indexOf(this.props.searchString) + ' ' + child.title);\n\t\t// JSON.stringify(node.title).toLowerCase().indexOf(searchQuery.toLowerCase())\n\t\t// var tmpfound = child.title.indexOf(this.props.searchString) > 0;\n\t\tvar tmpfoundhere = JSON.stringify(child.title).toLowerCase().indexOf(this.props.searchString.toLowerCase())\n\t\tvar tmpfoundlower = JSON.stringify(child).toLowerCase().indexOf(this.props.searchString.toLowerCase());\n\t\tvar actualclassnames = [\n\t\t\tchild.id,\n\t\t\tthis.thisopen || this.props.fullExpansion || this.props.searchString.length ? \"open\" : \"closed\",\n\t\t\tthis.props.searchString.length && tmpfoundhere > 0 ? \"searchstringfound\" : \"\",\n\t\t\tthis.props.searchString.length && tmpfoundlower > 0 ? \"searchstringfoundlower\" : \"\",\n\t\t\tthis.props.searchString.length && tmpfoundhere < 0 && tmpfoundlower < 0 ? \"searchstringnotfound\" : \"\",\n\t\t\tchild.id === this.props.lastActiveId ? \"lastActive\" : \"\",\n\t\t].join(' ');\n\t\t// console.log(child.title + \" --- \" + typeof(child.children));\n\t\t// console.log(child.title + \" --- \" + actualclassnames);\n\t\tif (typeof(child.children) === 'undefined') {\n\t\t\t// this.state.searchString\n\t\t\t// console.log(child);\n\t\t\t// console.log(this.props);\n\t\t\tvar btnestsec = '';\n\t\t\tif (typeof(child.estimatedSeconds) != 'undefined' && this.props.useInnerLimits === true) {\n\t\t\t\tbtnestsec = <button className=\"btn btn-warning btn-sm\" title=\"estimated runtime of original query\" style={{ fontSize: \"0.666em\"}} disabled>{(child.estimatedSeconds*2).toString().toHHMMSS()}</button>\n\t\t\t} else if (typeof(child.estimatedSeconds) != 'undefined') {\n\t\t\t\tbtnestsec = <button className=\"btn btn-secondary btn-sm\" title=\"estimated runtime of original query with limited results\" style={{ fontSize: \"0.666em\"}} disabled>{(child.estimatedSeconds*2).toString().toHHMMSS()}</button>\n\t\t\t} else {\n\t\t\t\tbtnestsec = '';\n\t\t\t}\n\t\t\treturn(\n\t\t\t\t<li key={child.id} data-haschild=\"false\" className={actualclassnames}><div className=\"title\">{child.title} {btnestsec}</div></li>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<li key={child.id} data-haschild=\"true\" className={actualclassnames}><div className=\"title\" onClick={this.handleClick} ><div className=\"plusminus\" ></div>{child.title}</div>\n\t\t\t\t\t<ul key={child.id}>\n\t\t\t\t\t\t{child.children.map(child => {\n\t\t\t\t\t\t\treturn <NestedNodes\n\t\t\t\t\t\t\t\ttreedata={child} key={child.id}\n\t\t\t\t\t\t\t\tsearchString={this.props.searchString}\n\t\t\t\t\t\t\t\tfullExpansion={this.props.fullExpansion}\n\t\t\t\t\t\t\t\tlastActiveId={this.props.lastActiveId}\n\t\t\t\t\t\t\t\tuseInnerLimits={this.props.useInnerLimits}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</li>\n\t\t\t); \n\t\t}\n\t}\n\n\trender() {\n\t\treturn [this.renderChild(this.props.treedata)]\n\t}\n}\n\nexport default TreeSearch;\n// include in index.js - React.render(<TreeSearch teams={teams} />, document.body);","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport { toggleExpandedForAll } from \"react-sortable-tree\"; // SortableTree, \nimport 'react-sortable-tree/style.css';\nimport { addNodeUnderParent } from \"react-sortable-tree\"; // find\nimport Select from 'react-select';\nimport { Async } from 'react-select'; // https://react-select.com/async\nimport fetch from 'isomorphic-fetch';\nimport './appstyles.css';\nimport biosodadata from './biosodadata.json'; // https://stackoverflow.com/questions/29452822/how-to-fetch-data-from-local-json-file-on-react-native/37781882#37781882\nimport { Row, Col } from  'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'codemirror/lib/codemirror.css';\nimport TreeSearch from './treeSearchReact.js';\nvar Codemirror = require('react-codemirror');\nrequire('codemirror/mode/sparql/sparql');\nconst varmasker = \"$$\"; // our vars are marked like $$genes$$\n\nconst defaultSparqlMessage = \"\" // Enter SPARQL query here or select one of the templates on the left - we should use \"placeholder\"\nconst reactStringReplace = require('react-string-replace');\n\nclass SparqlInputField extends Component {\n\trender() {\n\t\tvar options = {\n\t\t\tlineNumbers: true,\n\t\t\tmode: 'sparql',\n\t\t\t// plaeholder does not work today in this version ... \n\t\t\tplaceholder: \"Enter SPARQL query here or select one of the templates on the left\"\n\t\t};\n\n\t\tvar currentSPARQLmessage = defaultSparqlMessage;\n\t\tif (this.props.superState.query !== '') {\n\t\t\tcurrentSPARQLmessage = this.props.superState.query;\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h4 style={{ display: 'inline-block', marginRight:\"20px\"}}> SPARQL Query Editor </h4>\n\t\t\t\t<div>\n\t\t\t\t<Codemirror\n\t\t\t\t\tref=\"cm\"\n\t\t\t\t\tvalue={currentSPARQLmessage}\n\t\t\t\t\tonChange={this.props.updateCode.bind(this)}\n\t\t\t\t\tonKeyPress={this.props.updateCode.bind(this)}\n\t\t\t\t\toptions={options}\n\t\t\t\t\tdefaultValue={this.props.defaultValue}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={this.props.handleSubmit} className=\"btn btn-success\"> &gt; run this query </button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/*eslint no-extend-native: [\"error\", { \"exceptions\": [\"String\"] }]*/\nString.prototype.toHHMMSS = function () {\n\tvar sec_num = parseInt(this, 10); // don't forget the second param\n\tvar hours   = Math.floor(sec_num / 3600);\n\tvar minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n\tvar seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n\tif (hours   < 10) {hours   = \"0\"+hours;}\n\tif (minutes < 10) {minutes = \"0\"+minutes;}\n\tif (seconds < 10) {seconds = \"0\"+seconds;}\n\treturn hours+':'+minutes+':'+seconds;\n}\n\nclass ExtraTarget extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = { time: 0 };\n\t\tthis.result = null;\n\t}\n\tcomponentDidMount() {\n\t\tthis.interval = setInterval(() => this.setState({ time: Date.now() }), 60000);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval);\n\t}\n\tisAvailable = (targetURL) => {\n\t\tvar timeout = new Promise((resolve, reject) => {\n\t\t\tsetTimeout(reject, 1000, 'Request timed out');\n\t\t});\n\t\tvar request = fetch(targetURL);\n\t\t// var result = 'server state unknown';\n\t\tPromise\n\t\t\t.race([timeout, request])\n\t\t\t.then(response => {this.result = 'server is online';})\n\t\t\t.catch(error => {this.result = 'server is offline or slow'})\n\t\treturn this.result;\n\t}\n\trender() {\n\t\tvar targetExplanation = 'the query will be answered directly by the source db';\n\t\tif (this.props.superState.queryTargetShort === 'https://biosoda.expasy.org:4443/sparql') {\n\t\t\ttargetExplanation = 'the query will be sent to the federation server to fullfill the federated service calls';\n\t\t}\n\n\t\tvar isAvNow = this.isAvailable(this.props.superState.queryTargetShort);\n\n\t\treturn(\n\t\t\t<span> ({ targetExplanation }) - {isAvNow} - last check: { new Date(Date.now()).toLocaleString() }</span>\n\t\t)\n\t}\n}\n\nclass ServicePoints extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\trender() {\n\t\tvar allpoints = biosodadata.possibleServices.map((onepoint) => {\n\t\t\treturn <ServicePoint\n\t\t\t\tkey = {onepoint.name}\n\t\t\t\tname = {onepoint.name}\n\t\t\t\tmoreinfo = {onepoint.moreinfo}\n\t\t\t\tpopup = {onepoint.popup}\n\t\t\t\turlquery = {onepoint.urlquery}\n\t\t\t\tlastUpdate = {this.props.lastUpdate}\n\t\t\t/>\n\t\t});\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div dangerouslySetInnerHTML={{__html: \"Status of the queried service points: \"}}></div>\n\t\t\t\t{allpoints}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\n\nclass ServicePoint extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: true,\n\t\t\tstatus: [],\n\t\t\terror: null,\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.fetchStatus();\n\t}\n\tcomponentDidUpdate(prevProps, prevStatus) {\n\t\tif (prevProps.lastUpdate !== this.props.lastUpdate) {\n\t\t\tthis.fetchStatus();\n\t\t}\n\t}\n\tfetchStatus() {\n\t\tfetch(\n\t\t\tthis.props.urlquery,\n\t\t\t{ \n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t//'Access-Control-Allow-Origin': '*',\n\t\t\t\t\t// 'bioSODA': 'YESS',\n\t\t\t\t\t 'Accept': 'application/sparql-results+json, */*;q=0.5',\n\t\t\t\t\t// 'Content-Type': 'multipart/form-data',\n\t\t\t\t\t// 'mode': 'no-cors', // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors/43268098#43268098\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t\t// We get the API response and receive data in JSON format...\n\t\t.then(response => response.json() )\n\t\t.then(data => {// check here to find ok or not\n\t\t\tconsole.log(data);\n\t\t\tthis.setState({\n\t\t\t\tstatus: data,\n\t\t\t\tisLoading: false,\n\t\t\t\terror: null\n\t\t\t})\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.log(error);\n\t\t\tthis.setState({ error: error, isLoading: false })\n\t\t})\n\t}\n\trender() {\n\t\t// this.fetchStatus();\n\t\tconst { isLoading, status, error } = this.state;\n\t\tvar tmpclass = 'danger';\n\t\t(!isLoading && error === null ) ? tmpclass = 'success' : tmpclass = 'warning';\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t <a href={this.props.moreinfo} target=\"_blank\" rel=\"noopener noreferrer\" key={\"service_\"+this.props.name} className={\"btn btnmenu btn-\" + tmpclass } title={ this.props.popup }>{\" \" + this.props.name}</a>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nclass Progressbar extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tprog: 0,\n\t\t\testimate: this.props.estimatedRuntime,\n\t\t\tstartSeconds: Date.now()\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.timerID = setInterval(this.randomWidth.bind(this), 100);\n\t}\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timerID);\n\t}\n\trandomWidth() {\n\t\tvar thisNow = Date.now();\n\t\tvar totalRun = thisNow - this.state.startSeconds;\n\t\tvar newProgress = (1 - Math.exp(-1.5*totalRun/this.state.estimate/1000))*100; // thanks Christophe\n\t\t// var newProgress = totalRun/this.state.estimate/1000;\n\t\t// this.setState({ prog: Math.floor(Math.random()*100) }); // epileptic\n\t\tthis.setState({ prog: newProgress });\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"progress-bar progress-bar-striped progress-bar-animated\"\n\t\t\t\trole=\"progressbar\"\n\t\t\t\tstyle={{ width: this.state.prog + '%' }}\n\t\t\t\taria-valuemin=\"0\"\n\t\t\t\taria-valuemax=\"100\">\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nclass App extends Component {\n\n\t_handleKeyPress (e) {\n\t  if (e.key === 'Enter') {\n\t\tthis.handleSubmit();\n\t  }\n\t}\n\n\tnode_logger(goal, name, query, timetaken) {\n\t\treturn false;\n\t\tvar logbody = JSON.stringify({\n\t\t\tgoal: goal,\n\t\t\tname: name,\n\t\t\tquery: query,\n\t\t\ttimetaken: timetaken\n\t\t});\n\t\tfetch('http://biosoda.expasy.org:3002/', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Accept': 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: logbody\n\t\t});\n\t}\n\n\tupdateCode(code = '', triggerFrom = '') {\n\t\t/*console.log('code: ');\n\t\tconsole.log(code);\n\t\tconsole.log('triggy: ');\n\t\tconsole.log(triggerFrom);\n\t\tconsole.log(typeof(triggerFrom));*/\n\t\tif (typeof(this.refs.sparqy) !== \"undefined\") {\n\t\t\tvar newCode = this.refs.sparqy.refs.cm.getCodeMirror().doc.getValue();\n\t\t\tthis.setState({\n\t\t\t\tquery: newCode,\n\t\t\t\tmode: 'sparql',\n\t\t\t});\n\t\t\tif (typeof(triggerFrom) == 'object') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tqueryHuman: 'manually altered SPARQL query',\n\t\t\t\t\testimatedRuntime: 'not known - <a href=\"https://www.forbes.com/sites/gilpress/2015/07/29/turing-award-winner-stonebraker-on-the-future-of-taming-big-data/#54c0a84134e5\" target=\"_blank\">not calculateable</a> - hold on',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn true; // is needed to break the asynchronity\n\t};\n\n\thandleShow(nodeid) {\n\t\tthis.setState({ showSparql: true, lastActiveId: nodeid });\n\t\t// here we should re-render the whole menu tree\n\t\tthis['updateQuery_' + nodeid]();\n\t}\n\n\thandleRun(nodeid) { // only called when user wants to run the question directly\n\t\tthis.setState({ lastActiveId: nodeid });\n\t\tif (this['updateQuery_' + nodeid]()) {\n\t\t\tif(this.updateCode()) {\n\t\t\t\tthis.setState({ asyncWaiter: 1 }, // workaround the asynchronity of setState\n\t\t\t\t() => {\n\t\t\t\t\tthis.handleSubmit();\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSubmit() {\n\t\tvar query = this.state.query;\n\t\tvar queryUrl = this.state.queryTarget.replace(varmasker + 'query' + varmasker, encodeURIComponent(query)) // encodeURIComponent(biosodadata.prefixes)\n\t\t\t.replace(varmasker + 'offset' + varmasker, this.state.lookupOffset)\n\t\t\t.split(' ').join('+')\n\t\t\t// these splinters crash somehow on some endpoints:\n\t\t\t//.split('%20').join('+') // blank\n\t\t\t//.split('%0A').join('+') // new line\n\t\t\t//.split('%0D').join('+') // carriage return\n\t\t\t//.split('%09').join('+') // tab\n\t\t\t//.trim('+')\n\t\tif (this.state.useInnerLimits === true) {\n\t\t\tqueryUrl = queryUrl.replace(varmasker + '&limit=limit' + varmasker, '&limit=' + this.state.lookupLimit)\n\t\t} else {\n\t\t\tqueryUrl = queryUrl.replace(varmasker + '&limit=limit' + varmasker, '')\n\t\t}\n\n\t\tvar queryHeaders = this.state.queryHeaders;\n\t\tthis.displayResults('');\n\t\tthis.state.servicepointsUpdated = Date.now();\n\t\t// this.node_logger('SPARQL', query, 'before', 0);\n\t\tvar microstart = Date.now();\n\t\treturn fetch(queryUrl, {headers: queryHeaders})\n\t\t.then(res => res.json())\n\t\t.then(\n\t\t\t(result) => {\n\t\t\t\tvar microend = Date.now();\n\t\t\t\tvar microtaken = microend - microstart;\n\t\t\t\t// this.node_logger('SPARQL', query, 'after.resultcount: ' + result.results.bindings.length, microtaken);\n\t\t\t\tthis.displayResults(result, microtaken);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthis.setState({ hasResults: false, showSpinner: false })\n\t\t\t\talert(\"Error! \"+ error);\n\t\t\t}\n\t\t)\n\t}\n\n  expand(expanded) {\n\tvar toggleData = toggleExpandedForAll({\n            treeData: this.state.treeData,\n            expanded,\n        });\n    this.setState({\n        treeData: toggleData,\n    });\n  }\n  collapseAll() {\n\tthis.setState({ expanded: false });\n    this.expand(false);\n  }\n  \n  expandAll() {\n\tthis.setState({ expanded: true });\n    this.expand(true);\n  }\n\n  constructor(props) {\n\tsuper(props);\n\tdocument.title = \"bioSODA web frontend\";\n\n\tthis.handleSubmit = this.handleSubmit.bind(this);\n\tthis._handleKeyPress = this._handleKeyPress.bind(this);\n\n\tthis.updateCode = this.updateCode.bind(this);\n\tthis.handleShow = this.handleShow.bind(this);\n\tthis.handleRun = this.handleRun.bind(this);\n\n\tthis.expandAll = this.expandAll.bind(this);\n\tthis.collapseAll = this.collapseAll.bind(this);\n\tthis.displayResults = this.displayResults.bind(this);\n\n\tthis.state = {\n\t\tsearchString: '',\n\t\tshowSparql: false,\n\t\tshowSpinner: false,\n\t\tsparqlEndpointURL: '',\n\t\thasResults: false,\n\t\tservicepointsUpdated: Date.now(),\n\t\tvalue: '',\n\t\tdynamicvals: [],\n\t\ttreeData: [],\n\t\tresultOffset: 0,\n\t\tresultLimit: 10,\n\t\tlookupLimit: 100, // limits the results on var sparql lookups\n\t\tuseInnerLimits: true, // the inner limits may produce at least some data before timeout\n\t\tlookupOffset: 0, // probably never changes but who knows ;-)\n\t\tquery: '', // SPARQL query to display in the SPARQL query editor\n\t\tqueryHuman: 'none of our prepared queries', // human understandable query aka question\n\t\testimatedRuntime: 'unknown', // where applicable\n\t\tqueryTarget: 'https://biosoda.expasy.org:4443/sparql?query=$$query$$&format=JSON&limit=$$limit$$&offset=$$offset$$&inference=false', // where to send the SPARQL query\n\t\tqueryTargetShort: 'https://biosoda.expasy.org:4443/sparql',\n\t\tqueryHeaders: {},\n\t\tasyncWaiter : '',\n\t\texpanded: false,\n\t};\n\n\t// functionalities taken from lodestar/lode.js\n\tthis['renderedTableFromJSON'] = (json) => {\n\t\tvar eltable = document.createElement('table');\n\t\tvar _results = json.results.bindings;\n\t\tvar _variables = json.head.vars;\n\t\tvar elthead = document.createElement('thead');\n\t\tfor (let onevar of _variables) {\n\t\t\tif (onevar.endsWith('_noshow')) break;\n\t\t\tvar elth = document.createElement('th');\n\t\t\telth.appendChild(document.createTextNode(onevar));\n\t\t\telthead.appendChild(elth);\n\t\t}\n\t\teltable.appendChild(elthead);\n\t\tfor (let row of _results) {\n\t\t\tvar elrow = document.createElement('tr');\n\t\t\tfor (let onevar of _variables) {\n\t\t\t\t// console.log(onevar);\n\t\t\t\tif (!onevar.endsWith('_noshow')) {\n\t\t\t\t\tvar eltd = document.createElement('td');\n\t\t\t\t\t// row[onevar].type holds the type of the element uri, int, bool, ...\n\t\t\t\t\tif (typeof(row[onevar]) !== \"undefined\" && row[onevar].type === 'uri') {\n\t\t\t\t\t\tvar link = document.createElement('a');\n\t\t\t\t\t\tvar text = document.createTextNode(row[onevar].value);\n\t\t\t\t\t\tlink.appendChild(text);\n\t\t\t\t\t\tlink.title = 'linked resource';\n\t\t\t\t\t\tlink.href = row[onevar].value;\n\t\t\t\t\t\tlink.target = '_blank';\n\t\t\t\t\t\teltd.appendChild(link);\n\t\t\t\t\t} else if (typeof(row[onevar]) !== \"undefined\") {\n\t\t\t\t\t\teltd.appendChild(document.createTextNode(row[onevar].value));\n\t\t\t\t\t}\n\t\t\t\t\telrow.appendChild(eltd);\n\t\t\t\t}\n\t\t\t}\n\t\t\teltable.append(elrow);\n\t\t}\n\t\treturn(eltable);\n\t}\n\n\t// https://stackoverflow.com/questions/15523514/find-by-key-deep-in-a-nested-object\n\t// https://github.com/frontend-collective/react-sortable-tree/issues/49\n\t// two kind of nodes: structure and questions\n\tbiosodadata.structure.forEach(function(element) {\n\t\tlet NEW_NODE  = {\n\t\t\tid: element.id,\n\t\t\ttitle: element.title,\n\t\t};\n\t\tlet newTree = addNodeUnderParent({\n\t\t\ttreeData: this.state.treeData,\n\t\t\tnewNode: NEW_NODE,\n\t\t\texpandParent: true,\n\t\t\tparentKey: element.parentId, // here we want to find the correct key using getParent from link above or similar/better\n\t\t\tgetNodeKey: ({ node }) =>  node.id\n\t\t});\n\t\tthis.state.treeData = newTree.treeData;\n\t}, this);\n\n\tbiosodadata.questions.forEach(function(el) {\n\t\tel.parentIds.forEach(function(element) {\n\t\t\tvar functionalQuestion = []; // we need that to have all questions as arrays even if they have no vars\n\t\t\tfunctionalQuestion.push(el.question);\n\t\t\tthis['updateQuery_'+el.id] = (event) => {\n\t\t\t\tvar newsparql = el.SPARQL;\n\t\t\t\tvar humanReadable = el.question;\n\t\t\t\tvar newEstimatedRuntimeSeconds = el.estimatedseconds * 2;\n\t\t\t\tvar estimatedRuntime = (newEstimatedRuntimeSeconds).toString();\n\t\t\t\tif (typeof(estimatedRuntime) == 'undefined') {\n\t\t\t\t\testimatedRuntime = 'unknown';\n\t\t\t\t} else {\n\t\t\t\t\testimatedRuntime = estimatedRuntime.toHHMMSS();\n\t\t\t\t}\n\t\t\t\tif (typeof(el.vars) !== \"undefined\") {\n\t\t\t\t\tfor (let onevar of el.vars) {\n\t\t\t\t\t\tvar tmptype = onevar.type;\n\t\t\t\t\t\tif (tmptype === 'string' || tmptype === 'list' || tmptype === 'simplelist') {\n\t\t\t\t\t\t\tvar originalval = varmasker + onevar.name + varmasker;\n\t\t\t\t\t\t\tvar replaceval;\n\t\t\t\t\t\t\tvar replacevalhuman;\n\t\t\t\t\t\t\tif (typeof(this.state.dynamicvals[el.id]) === 'undefined' || typeof(this.state.dynamicvals[el.id][onevar.name]) === 'undefined' || typeof(this.state.dynamicvals[el.id][onevar.name]['label']) === 'undefined') {\n\t\t\t\t\t\t\t\tif (typeof(onevar.defaultvalue) === \"undefined\") onevar.defaultvalue = onevar.default;\n\t\t\t\t\t\t\t\treplaceval = onevar.defaultvalue;\n\t\t\t\t\t\t\t\treplacevalhuman = onevar.default;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treplaceval = this.state.dynamicvals[el.id][onevar.name]['value'];\n\t\t\t\t\t\t\t\tif (typeof (this.state.dynamicvals[el.id][onevar.name]['label']) !== \"undefined\") {\n\t\t\t\t\t\t\t\t\treplacevalhuman = this.state.dynamicvals[el.id][onevar.name]['label'];\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treplacevalhuman = this.state.dynamicvals[el.id][onevar.name]['value'];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnewsparql = newsparql.split(originalval).join(replaceval.split(\"'\").join(\"\\\\'\")); // better than .replace because it replaces all of the occurences\n\t\t\t\t\t\t\thumanReadable = humanReadable.split(originalval).join(replacevalhuman); // better than .replace because it replaces all of the occurences\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.state.useInnerLimits === true) {\n\t\t\t\t\tnewsparql = newsparql.split(varmasker + 'innerlimit' + varmasker).join('LIMIT ' + this.state.resultLimit);\n\t\t\t\t\tnewsparql = newsparql.split(varmasker + 'innerlimit10' + varmasker).join('LIMIT ' + this.state.resultLimit * 10);\n\t\t\t\t} else {\n\t\t\t\t\tnewsparql = newsparql.split(varmasker + 'innerlimit' + varmasker).join('');\n\t\t\t\t}\n\n\t\t\t\tthis.setState({ query: newsparql, queryTarget: el.fetchUrl, queryTargetShort: el.fetchUrlShort, queryHeaders: el.queryHeaders, queryHuman: humanReadable, estimatedRuntime: estimatedRuntime, estimatedRuntimeSeconds: newEstimatedRuntimeSeconds });\n\t\t\t\tif(typeof(this.refs.sparqy) !== 'undefined') {\n\t\t\t\t\tthis.refs.sparqy.refs.cm.getCodeMirror().doc.setValue(newsparql);\n\t\t\t\t}\n\t\t\t\treturn true; // is needed to break the asynchronity - is it?\n\t\t\t};\n\t\t\tif (typeof(el.vars) !== \"undefined\") {\n\t\t\t\tfor (let onevar of el.vars) {\n\t\t\t\t\tif (onevar.type ==='string') {\n\t\t\t\t\t\tfunctionalQuestion = reactStringReplace(functionalQuestion, varmasker + onevar.name + varmasker, (match, i) => (<input\n\t\t\t\t\t\t\tkey={onevar.name}\n\t\t\t\t\t\t\tname={onevar.name}\n\t\t\t\t\t\t\tid={el.id + \"_\" + onevar.name}\n\t\t\t\t\t\t\tdefaultValue={onevar.default}\n\t\t\t\t\t\t\tonChange={(evt) => this.handleChange(evt.value, el.id, onevar.name, evt)}\n\t\t\t\t\t\t/>));\n\t\t\t\t\t}\n\t\t\t\t\tif (onevar.type === 'simplelist') {\n\t\t\t\t\t\tvar tmpoptions = onevar.listvalues;\n\t\t\t\t\t\t// if is defined listlabels, we can add them also\n\t\t\t\t\t\t\n\t\t\t\t\t\tfunctionalQuestion = reactStringReplace(functionalQuestion, varmasker + onevar.name + varmasker, (match, i) => (<Select\n\t\t\t\t\t\t\tkey={onevar.name}\n\t\t\t\t\t\t\tname={onevar.name}\n\t\t\t\t\t\t\tid={el.id + \"_\" + onevar.name}\n\t\t\t\t\t\t\tdefaultValue={{value: onevar.defaultvalue, label: onevar.default}}\n\t\t\t\t\t\t\tclassNamePrefix=\"my-select\"\n\t\t\t\t\t\t\toptions = {tmpoptions}\n\t\t\t\t\t\t\tclassName=\"reactSelect\"\n\t\t\t\t\t\t\tonChange={(evt) => this.handleChangeSelect(el.id, onevar.name, evt)}\n\t\t\t\t\t\t/>));\n\t\t\t\t\t}\n\t\t\t\t\tif (onevar.type === 'list') {\n\t\t\t\t\t\tif (onevar.flavour === 'autocomplete') {\n\t\t\t\t\t\t\tthis['fetchAutocomplete_'+onevar.name] = function(searchKey) {\n\t\t\t\t\t\t\t\tvar searchFilter = [];\n\t\t\t\t\t\t\t\tif (typeof(onevar.fullList) !== \"undefined\" && onevar.fullList === true) {\n\t\t\t\t\t\t\t\t\tsearchKey = '';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (typeof(onevar.extrafilter) !== \"undefined\") {\n\t\t\t\t\t\t\t\t\tsearchFilter = onevar.extrafilter;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn this.fetchAutocompleteBiosoda(onevar.datasource, searchKey, el.id, onevar.name, searchFilter);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tfunctionalQuestion = reactStringReplace(functionalQuestion, varmasker + onevar.name + varmasker, (match, i) => (<Async\n\t\t\t\t\t\t\tkey={onevar.name}\n\t\t\t\t\t\t\tname={onevar.name}\n\t\t\t\t\t\t\tid={el.id + \"_\" + onevar.name}\n\t\t\t\t\t\t\tclassNamePrefix=\"my-select\"\n\t\t\t\t\t\t\tclassName=\"autocomplete\"\n\t\t\t\t\t\t\tdataExtrafilter={onevar.extrafilter}\n\t\t\t\t\t\t\tdefaultValue={{label: onevar.default}}\n\t\t\t\t\t\t\tnoOptionsMessage={({ inputValue }) => !inputValue && 'Type keyword above to perform search. Found options will be listed here ...'}\n\t\t\t\t\t\t\tonChange={(evt) => this.handleChange(evt.value, el.id, onevar.name, evt)}\n\t\t\t\t\t\t\tcacheOptions loadOptions={this['fetchAutocomplete_'+onevar.name].bind(this)}\n\t\t\t\t\t\t/>));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunctionalQuestion.push(<button key={'showSPARQL_' + el.id} className=\"btn btn-primary buttonInfo\" title=\"show query in SPARQL query editor\" onClick={() => this.handleShow(el.id)}>i</button>);\n\t\t\tfunctionalQuestion.push(<button key={'submitquery_' + el.id} className=\"btn btn-success buttonSubmit\" title=\"directly run this query\" onClick={() => this.handleRun(el.id)}>&gt;</button>);\n\n\t\t\tif (typeof(el.fullHTML) !== \"undefined\") {\n\t\t\t\tfunctionalQuestion = [];\n\t\t\t\tfunctionalQuestion.push(<div key={el.id} dangerouslySetInnerHTML={{__html: el.question}} code={el.question} />);\n\t\t\t}\n\n\t\t\tlet NEW_NODE  = {\n\t\t\t\tid: el.id,\n\t\t\t\ttitle: functionalQuestion,\n\t\t\t\testimatedSeconds: el.estimatedseconds\n\t\t\t};\n\n\t\t\tlet newTree = addNodeUnderParent({\n\t\t\t\ttreeData: this.state.treeData,\n\t\t\t\tnewNode: NEW_NODE,\n\t\t\t\texpandParent: true,\n\t\t\t\tparentKey: element, // here we want to find the correct key using getParent from link above or similar/better\n\t\t\t\tgetNodeKey: ({ node }) =>  node.id\n\t\t\t});\n\t\t\tthis.state.treeData = newTree.treeData;\n\t\t}, this);\n\t}, this);\n}\n\n\tfetchAutocompleteBiosoda(datasource, searchString, questionid, varname, searchFilter){\n\t\t// this.node_logger('async_'+questionid+\"_\"+varname, datasource, searchString, 0);\n\t\tvar query = biosodadata.datasources[datasource].fetchQuery.split(varmasker + 'searchString' + varmasker).join(searchString.toLowerCase())\n\n\t\t// searchFilter contains a list of extrafilters which have to be taken into account\n\t\tvar extracounter = 0;\n\t\tfor (let oneextra of searchFilter) {\n\t\t\tconsole.log(extracounter);\n\t\t\tquery = query.split(varmasker + 'extra_' + extracounter + varmasker).join('fruit fly');\n\t\t\tconsole.log('replace species @585');\n\t\t\tconsole.log(oneextra);\n\t\t\textracounter++;\n\t\t}\n\n\t\tvar queryURL = biosodadata.datasources[datasource].fetchUrl.replace(varmasker + 'query' + varmasker, encodeURIComponent(query))\n\t\t\t.replace(varmasker + '&limit=limit' + varmasker, '&limit=' + this.state.lookupLimit)\n\t\t\t.replace(varmasker + 'offset' + varmasker, this.state.lookupOffset)\n\t\t\t.replace(' ', '+');\n\n\t\tvar queryHeaders = biosodadata.datasources[datasource].queryHeaders;\n\t\treturn fetch(queryURL, {headers: queryHeaders})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((json) => {\n\t\t\t\t// we want to sort the results like this: exact match, startswith, endswith, contains\n\t\t\t\tjson.results.bindings.sort( (a,b) => {\n\t\t\t\t\t// same strings\n\t\t\t\t\tif (a.value.value === b.value.value) return 0;\n\t\t\t\t\t// if everything else is sorted, we go after the alphabet\n\t\t\t\t\tif (\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\ta.value.value.toLowerCase().substring(a.length- searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t\t&&\n\t\t\t\t\t\t\tb.value.value.toLowerCase().substring(b.length- searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t)\n\t\t\t\t\t\t||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\ta.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t\t&&\n\t\t\t\t\t\t\tb.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (a.value.value.toLowerCase() > b.value.value.toLowerCase()) return 1;\n\t\t\t\t\t\tif (a.value.value.toLowerCase() < b.value.value.toLowerCase()) return- 1;\n\t\t\t\t\t}\n\t\t\t\t\t// full match a\n\t\t\t\t\tif (a.value.value.toLowerCase() === searchString.toLowerCase()) return -1;\n\t\t\t\t\t// full match b\n\t\t\t\t\tif (b.value.value.toLowerCase() === searchString.toLowerCase()) return 1;\n\t\t\t\t\t// left position a\n\t\t\t\t\tif (a.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()) return -1;\n\t\t\t\t\t// left position b\n\t\t\t\t\tif (b.value.value.toLowerCase().substring(0, searchString.length) === searchString.toLowerCase()) return 1;\n\t\t\t\t\t// right position a\n\t\t\t\t\tif (a.value.value.toLowerCase().substring(a.length- searchString.length) === searchString.toLowerCase()) return -1;\n\t\t\t\t\t// right position b\n\t\t\t\t\tif (b.value.value.toLowerCase().substring(b.length- searchString.length) === searchString.toLowerCase()) return 1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\n\t\t\t\tconst formatted = json.results.bindings.map((l) => {\n\t\t\t\t\tif (typeof(l.name) === 'undefined') l.name = l.value;\n\t\t\t\t\treturn Object.assign({}, {\n\t\t\t\t\t\tvalue: l.value.value,\n\t\t\t\t\t\tlabel: l.name.value\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\tthis.setState({ options:formatted });\n\t\t\t\t\treturn formatted;\n\t\t\t\t}).catch((error) => {\n\t\t\t\t\tconsole.error(error)\n\t\t\t\t})\n\t}\n\n\thandleChange (value, elid, varname, evt) {\n\t\tif (typeof(evt.target) !== \"undefined\") {\n\t\t\tvalue = evt.target.value;\n\t\t}\n\t\tvar dynvals = this.state.dynamicvals;\n\t\tif (typeof(dynvals[elid]) == 'undefined') {\n\t\t\tdynvals[elid] = [];\n\t\t}\n\t\tif (typeof(dynvals[elid][varname]) == 'undefined') {\n\t\t\tdynvals[elid][varname] = [];\n\t\t}\n\t\tdynvals[elid][varname]['value'] = value;\n\t\tif (typeof(evt.label) !== \"undefined\") {\n\t\t\tdynvals[elid][varname]['label'] = evt.label;\n\t\t} else {\n\t\t\tdynvals[elid][varname]['label'] = value;\n\t\t}\n\t\tthis.setState({dynamicvals: dynvals});\n\t\tthis['updateQuery_'+elid](); // to show the new query in the SPARQL field\n\t}\n\n\thandleChangeSelect (elid, varname, evt) {\n\t\tvar dynvals = this.state.dynamicvals;\n\t\tif (typeof(dynvals[elid]) == 'undefined') {\n\t\t\tdynvals[elid] = [];\n\t\t}\n\t\tif (typeof(dynvals[elid][varname]) == 'undefined') {\n\t\t\tdynvals[elid][varname] = [];\n\t\t}\n\t\tdynvals[elid][varname]['value'] = evt.value;\n\t\tdynvals[elid][varname]['label'] = evt.label;\n\t\tthis.setState({dynamicvals: dynvals});\n\t\tthis['updateQuery_'+elid](); // to show the new query in the SPARQL field\n\t}\n\n\tdisplayResults (result, microtaken) {\n\t\tif (result !== '') {\n\t\t\tthis.setState({ hasResults: true, showSpinner: false })\n\t\t\tdocument.getElementById('results').appendChild(document.createTextNode('Time taken: ' + microtaken/1000 + ' s, result count: ' + result.results.bindings.length));\n\t\t\tif (result.results.bindings.length > 0) {\n\t\t\t\tdocument.getElementById('results').appendChild(this.renderedTableFromJSON(result));\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.getElementById('results').innerHTML = \"\";\n\t\t\tthis.setState({ showSpinner: true });\n\t\t}\n\t}\n\n  render() {\n\tconst { searchString } = this.state;\n\treturn (\n\t\t<div style={{ height: 700 }}>\n\t\t<Row>\n\t\t\t<Col lg={6} md={12}>\n\t\t\t\t<h3 style={{\n\t\t\t\t\t'backgroundColor': 'white'\n\t\t\t\t}}>\n\t\t\t\t\t<strong>Bio</strong>-Query\n\t\t\t\t\t<span style={{ fontSize: \"0.6em\", position: 'relative', bottom: '0.6em', color: 'red', fontFamily: 'monospace' }} title=\"BETA-Version - Working prototype with limited functionality\">β</span>:\n\t\t\t\t\tFederated template <strong>s</strong>earch <strong>o</strong>ver biological <strong>da</strong>tabases \n\t\t\t\t</h3>\n\t\t\t</Col>\n\t\t\t<Col  lg={6} md={12} id=\"services\" style={{\n\t\t\t\ttextAlign: 'right',\n\t\t\t\tbackgroundColor: 'rgba(222,222,222,0.222)',\n\t\t\t\tpadding: '0.222em',\n\t\t\t\tmargin: '0.222em auto'\n\t\t\t\t// whiteSpace: 'nowrap'\n\t\t\t}}>\n\t\t\t\t<ServicePoints ref=\"servicepoints\" lastUpdate={ this.state.servicepointsUpdated } />\n\t\t\t</Col>\n\t\t</Row>\n\t\t<Row style={{\n\t\t\tclear: 'both'\n\t\t}}>\n\t\t\t<Col sm={this.state.showSparql? \"7\": \"12\"}>\n\t\t\t<form\n\t\t\t  style={{\n\t\t\t\t  display: 'inline-block',\n\t\t\t\t  'backgroundColor': 'white'\n\t\t\t\t}}\n\t\t\t  onSubmit={event => {\n\t\t\t\tevent.preventDefault();\n\t\t\t  }}\n\t\t\t>\n\t\t\t  <input\n\t\t\t\tid=\"find-box\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Search our queries...\"\n\t\t\t\tvalue={searchString}\n\t\t\t\tonChange={(event) => {\n\t\t\t\t\tthis.setState({ searchString: event.target.value });\n\t\t\t\t\t// this.node_logger('topsearch', event.target.value, '', 0);\n\t\t\t\t}}\n\t\t\t  />\n\t\t\t{ !this.state.expanded ?\n\t\t\t\t<button className=\"btn btn-primary btnmenu\" onClick={this.expandAll}>\n\t\t\t\t\tExpand All\n\t\t\t\t</button>\n\t\t\t\t:\n\t\t\t\t<button className=\"btn btn-warning btnmenu\" onClick={this.collapseAll}>\n\t\t\t\t\tCollapse All\n\t\t\t\t</button>\n\t\t\t}\n\n            {\n              this.state.showSparql ?\n              <button\n                className=\"btn btnmenu\"\n                style={{ backgroundColor: \"#00FFFF\"}}\n                onClick={() => this.setState({ showSparql: false })}\n              >\n              Hide SPARQL Query Editor\n            </button>\n               :\n               <button\n                 className=\"btn btnmenu\"\n                 style={{backgroundColor: \"#00FFFF\"}}\n                 onClick={() => this.setState({ showSparql: true })}\n               >\n               Show SPARQL Query Editor\n             </button>\n            }\n\n\t\t\t{\n              this.state.useInnerLimits ?\n              <button\n                className=\"btn btnmenu\"\n                style={{ backgroundColor: \"#00FFFF\"}}\n                onClick={() => {\n\t\t\t\t\tthis.setState({ useInnerLimits: false});\n\t\t\t\t\tif(typeof(this.refs.sparqy) !== 'undefined') {\n\t\t\t\t\t\tthis.refs.sparqy.refs.cm.getCodeMirror().doc.setValue('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttitle=\"if you use inner limits, you can reduce the time to load the results. you probably won't get all of the rows but you can see if your query works as expected\"\n              >\n              Limited results are on\n            </button>\n               :\n               <button\n                 className=\"btn btnmenu\"\n                 style={{backgroundColor: \"#00FFFF\"}}\n                 onClick={() => {\n\t\t\t\t\tthis.setState({ useInnerLimits: true });\n\t\t\t\t\tif(typeof(this.refs.sparqy) !== 'undefined') {\n\t\t\t\t\t\tthis.refs.sparqy.refs.cm.getCodeMirror().doc.setValue('')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t title=\"if you don't use inner limits, you can run into a timeout if your query asks for too much data\"\n               >\n              Limited results are off\n             </button>\n            }\n\n\t\t\t<button className=\"btn btn-success btnmenu\" onClick={() => window.location.reload()}  rel=\"noopener noreferrer\">\n\t\t\t\tReset / Reload\n\t\t\t</button>\n\n\t\t\t<a className=\"btn btn-light btnmenu\" href=\"https://github.com/biosoda/bioquery\" target=\"_blank\"  rel=\"noopener noreferrer\">\n\t\t\t\tAbout\n\t\t\t</a>\n\n\t\t\t\n\t\t\t</form>\n\t\t\t\t<div style={{ height: '700px', overflow: 'hidden', padding: '1em', overflowY: 'auto'}}>\n\t\t\t\t<TreeSearch\n\t\t\t\t\ttreedata={this.state.treeData}\n\t\t\t\t\tsearchString={this.state.searchString}\n\t\t\t\t\tfullExpansion={this.state.expanded}\n\t\t\t\t\tlastActiveId={this.state.lastActiveId}\n\t\t\t\t\tuseInnerLimits={this.state.useInnerLimits}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t\t\t\t\t</div>\n\t\t\t</Col>\n\t\t\t { this.state.showSparql ?\n\t\t\t\t<Col sm=\"5\">\n\t\t\t\t\t<SparqlInputField\n\t\t\t\t\t\tref=\"sparqy\"\n\t\t\t\t\t\tdisplayResults={this.displayResults}\n\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\tsuperState={this.state}\n\t\t\t\t\t\tupdateCode={this.updateCode.bind(this)}\n\t\t\t\t\t\tdefaultValue=\"\" // doesn't work because it's not like HTML: Enter SPARQL query here or select one of the templates on the left\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t: null }\n\t\t</Row>\n\t\t{ this.state.showSpinner ?\n\t\t\t<Row id=\"spinnerwheel\">\n\t\t\t\t<Col>\n\t\t\t\t\t<div className=\"progress\">\n\t\t\t\t\t\t<Progressbar estimatedRuntime={this.state.estimatedRuntimeSeconds} />\n\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t: null }\n\n        <Row id=\"resultscol\">\n\t\t\t<Col>\n\t\t\t\t<div id=\"technical\" style={{display: 'none'}}>\n\t\t\t\t\t<div>Number of results (LIMIT): <span className=\"badge btn-primary\">1</span> <span className=\"badge btn-primary\">10</span> <span className=\"badge btn-primary\">25</span></div>\n\t\t\t\t\t<div>Next page (OFFSET - if available): <span className=\"badge btn-primary\">PREV</span> <span className=\"badge btn-primary\">NEXT</span></div>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"askedQuery\" style={{padding: '1em'}}><span>Your Question: </span><span id=\"question\">{this.state.queryHuman}</span></div>\n\t\t\t\t<div id=\"fetchTargetDiv\" style={{padding: '1em'}}><span>Query will be sent to: </span><span id=\"fetchTarget\"><a href={this.state.queryTargetShort} target=\"_blank\" rel=\"noopener noreferrer\">{this.state.queryTargetShort}</a><ExtraTarget superState={this.state} /></span></div>\n\t\t\t\t<div id=\"estimatedRuntime\" style={{padding: '1em'}}><span>Estimated Runtime: </span><span id=\"estimatedRuntime\" dangerouslySetInnerHTML={ {__html: this.state.estimatedRuntime} }></span></div>\n\t\t\t\t<div id=\"results\" ref=\"results\"></div>\n\t\t\t</Col>\n\t   </Row>\n      </div>\n    );\n  }\n}\n\nrender(<App\n\tdevelopersdata = {biosodadata}\n/>, document.getElementById(\"root\"));"],"sourceRoot":""}